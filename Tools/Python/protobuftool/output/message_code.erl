
-module(message_code).
-export([encode/1, decode/1,
         encode_msg_bin/1, merge_bin/2,
         decode_msg_bin/2, split_bin/1]).
-include_lib("eunit/include/eunit.hrl").
-include_lib("network_proto/include/activity_pb.hrl").
-include_lib("network_proto/include/arena_pb.hrl").
-include_lib("network_proto/include/battle_pb.hrl").
-include_lib("network_proto/include/chapter_fight_pb.hrl").
-include_lib("network_proto/include/chat_pb.hrl").
-include_lib("network_proto/include/common_pb.hrl").
-include_lib("network_proto/include/common_fight_pb.hrl").
-include_lib("network_proto/include/friend_pb.hrl").
-include_lib("network_proto/include/galaxy_pb.hrl").
-include_lib("network_proto/include/guild_pb.hrl").
-include_lib("network_proto/include/guild_war_pb.hrl").
-include_lib("network_proto/include/item_pb.hrl").
-include_lib("network_proto/include/login_pb.hrl").
-include_lib("network_proto/include/mail_pb.hrl").
-include_lib("network_proto/include/map_pb.hrl").
-include_lib("network_proto/include/master_fight_pb.hrl").
-include_lib("network_proto/include/mission_pb.hrl").
-include_lib("network_proto/include/pass_fight_pb.hrl").
-include_lib("network_proto/include/pet_pb.hrl").
-include_lib("network_proto/include/player_pb.hrl").
-include_lib("network_proto/include/random_fight_pb.hrl").
-include_lib("network_proto/include/ranking_pb.hrl").
-include_lib("network_proto/include/shop_pb.hrl").
-include_lib("network_proto/include/skill_pb.hrl").
-include_lib("network_proto/include/team_pb.hrl").
-include_lib("network_proto/include/vip_level_pb.hrl").
-include_lib("network_proto/include/welfare_fight_pb.hrl").
-define(INT_PROTO_ID,    16/unsigned-big-integer).
encode(#cs_login{}=Msg) -> {ok, <<1:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_cs_login(Msg)))/binary>>};
encode(#sc_login{}=Msg) -> {ok, <<2:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_sc_login(Msg)))/binary>>};
encode(#cs_login_reconnection{}=Msg) -> {ok, <<3:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_cs_login_reconnection(Msg)))/binary>>};
encode(#sc_login_reconnection{}=Msg) -> {ok, <<4:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_sc_login_reconnection(Msg)))/binary>>};
encode(#cs_login_logoff{}=Msg) -> {ok, <<5:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_cs_login_logoff(Msg)))/binary>>};
encode(#sc_login_repeat{}=Msg) -> {ok, <<6:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_sc_login_repeat(Msg)))/binary>>};
encode(#cs_login_heartbeat{}=Msg) -> {ok, <<7:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_cs_login_heartbeat(Msg)))/binary>>};
encode(#sc_login_heartbeat{}=Msg) -> {ok, <<8:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_sc_login_heartbeat(Msg)))/binary>>};
encode(#cs_login_proto_count{}=Msg) -> {ok, <<9:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_cs_login_proto_count(Msg)))/binary>>};
encode(#cs_login_proto_clean{}=Msg) -> {ok, <<10:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_cs_login_proto_clean(Msg)))/binary>>};
encode(#sc_login_proto_count{}=Msg) -> {ok, <<11:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_sc_login_proto_count(Msg)))/binary>>};
encode(#sc_login_proto_clean{}=Msg) -> {ok, <<12:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_sc_login_proto_clean(Msg)))/binary>>};
encode(#sc_login_role_list{}=Msg) -> {ok, <<13:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_sc_login_role_list(Msg)))/binary>>};
encode(#cs_login_role_list{}=Msg) -> {ok, <<14:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_cs_login_role_list(Msg)))/binary>>};
encode(#cs_login_role_choose{}=Msg) -> {ok, <<15:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_cs_login_role_choose(Msg)))/binary>>};
encode(#cs_login_role_create{}=Msg) -> {ok, <<16:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_cs_login_role_create(Msg)))/binary>>};
encode(#sc_login_role_response{}=Msg) -> {ok, <<17:?INT_PROTO_ID, (erlang:iolist_to_binary(login_pb:encode_sc_login_role_response(Msg)))/binary>>};
encode(#sc_player_info{}=Msg) -> {ok, <<101:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_info(Msg)))/binary>>};
encode(#sc_player_sys_notice{}=Msg) -> {ok, <<102:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_sys_notice(Msg)))/binary>>};
encode(#cs_player_info_modify{}=Msg) -> {ok, <<103:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_cs_player_info_modify(Msg)))/binary>>};
encode(#sc_player_info_modify{}=Msg) -> {ok, <<104:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_info_modify(Msg)))/binary>>};
encode(#cs_player_skill_upgrade{}=Msg) -> {ok, <<105:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_cs_player_skill_upgrade(Msg)))/binary>>};
encode(#sc_player_skill_upgrade{}=Msg) -> {ok, <<106:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_skill_upgrade(Msg)))/binary>>};
encode(#cs_player_dress_query{}=Msg) -> {ok, <<107:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_cs_player_dress_query(Msg)))/binary>>};
encode(#sc_player_dress_update{}=Msg) -> {ok, <<108:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_dress_update(Msg)))/binary>>};
encode(#cs_player_dress_use{}=Msg) -> {ok, <<109:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_cs_player_dress_use(Msg)))/binary>>};
encode(#sc_player_dress_use{}=Msg) -> {ok, <<110:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_dress_use(Msg)))/binary>>};
encode(#cs_player_title_query{}=Msg) -> {ok, <<111:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_cs_player_title_query(Msg)))/binary>>};
encode(#sc_player_title_update{}=Msg) -> {ok, <<112:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_title_update(Msg)))/binary>>};
encode(#cs_player_title_use{}=Msg) -> {ok, <<113:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_cs_player_title_use(Msg)))/binary>>};
encode(#sc_player_title_use{}=Msg) -> {ok, <<114:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_title_use(Msg)))/binary>>};
encode(#cs_player_detail_info_query{}=Msg) -> {ok, <<115:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_cs_player_detail_info_query(Msg)))/binary>>};
encode(#sc_player_detail_info_query{}=Msg) -> {ok, <<116:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_detail_info_query(Msg)))/binary>>};
encode(#cs_player_guide_info{}=Msg) -> {ok, <<117:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_cs_player_guide_info(Msg)))/binary>>};
encode(#sc_player_guide_info{}=Msg) -> {ok, <<118:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_guide_info(Msg)))/binary>>};
encode(#sc_player_skill_change{}=Msg) -> {ok, <<119:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_skill_change(Msg)))/binary>>};
encode(#cs_player_limit{}=Msg) -> {ok, <<120:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_cs_player_limit(Msg)))/binary>>};
encode(#sc_player_limit{}=Msg) -> {ok, <<121:?INT_PROTO_ID, (erlang:iolist_to_binary(player_pb:encode_sc_player_limit(Msg)))/binary>>};
encode(#cs_galaxy_upgrade{}=Msg) -> {ok, <<150:?INT_PROTO_ID, (erlang:iolist_to_binary(galaxy_pb:encode_cs_galaxy_upgrade(Msg)))/binary>>};
encode(#sc_galaxy_upgrade_reply{}=Msg) -> {ok, <<151:?INT_PROTO_ID, (erlang:iolist_to_binary(galaxy_pb:encode_sc_galaxy_upgrade_reply(Msg)))/binary>>};
encode(#sc_galaxy_info{}=Msg) -> {ok, <<152:?INT_PROTO_ID, (erlang:iolist_to_binary(galaxy_pb:encode_sc_galaxy_info(Msg)))/binary>>};
encode(#sc_training_skill_info{}=Msg) -> {ok, <<160:?INT_PROTO_ID, (erlang:iolist_to_binary(skill_pb:encode_sc_training_skill_info(Msg)))/binary>>};
encode(#cs_training_skill_upgrade{}=Msg) -> {ok, <<161:?INT_PROTO_ID, (erlang:iolist_to_binary(skill_pb:encode_cs_training_skill_upgrade(Msg)))/binary>>};
encode(#sc_training_skill_upgrade_reply{}=Msg) -> {ok, <<162:?INT_PROTO_ID, (erlang:iolist_to_binary(skill_pb:encode_sc_training_skill_upgrade_reply(Msg)))/binary>>};
encode(#cs_map_action{}=Msg) -> {ok, <<200:?INT_PROTO_ID, (erlang:iolist_to_binary(map_pb:encode_cs_map_action(Msg)))/binary>>};
encode(#sc_map_action{}=Msg) -> {ok, <<201:?INT_PROTO_ID, (erlang:iolist_to_binary(map_pb:encode_sc_map_action(Msg)))/binary>>};
encode(#sc_map_enter_scene{}=Msg) -> {ok, <<202:?INT_PROTO_ID, (erlang:iolist_to_binary(map_pb:encode_sc_map_enter_scene(Msg)))/binary>>};
encode(#cs_map_enter_scene{}=Msg) -> {ok, <<203:?INT_PROTO_ID, (erlang:iolist_to_binary(map_pb:encode_cs_map_enter_scene(Msg)))/binary>>};
encode(#cs_map_skill_hit{}=Msg) -> {ok, <<205:?INT_PROTO_ID, (erlang:iolist_to_binary(map_pb:encode_cs_map_skill_hit(Msg)))/binary>>};
encode(#sc_map_skill_hit{}=Msg) -> {ok, <<206:?INT_PROTO_ID, (erlang:iolist_to_binary(map_pb:encode_sc_map_skill_hit(Msg)))/binary>>};
encode(#cs_map_enter_city{}=Msg) -> {ok, <<207:?INT_PROTO_ID, (erlang:iolist_to_binary(map_pb:encode_cs_map_enter_city(Msg)))/binary>>};
encode(#cs_map_lua_run_time{}=Msg) -> {ok, <<208:?INT_PROTO_ID, (erlang:iolist_to_binary(map_pb:encode_cs_map_lua_run_time(Msg)))/binary>>};
encode(#sc_map_lua_run_time{}=Msg) -> {ok, <<209:?INT_PROTO_ID, (erlang:iolist_to_binary(map_pb:encode_sc_map_lua_run_time(Msg)))/binary>>};
encode(#sc_battle_info{}=Msg) -> {ok, <<301:?INT_PROTO_ID, (erlang:iolist_to_binary(battle_pb:encode_sc_battle_info(Msg)))/binary>>};
encode(#sc_battle_state{}=Msg) -> {ok, <<302:?INT_PROTO_ID, (erlang:iolist_to_binary(battle_pb:encode_sc_battle_state(Msg)))/binary>>};
encode(#sc_battle_object_add{}=Msg) -> {ok, <<303:?INT_PROTO_ID, (erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_add(Msg)))/binary>>};
encode(#sc_battle_object_remove{}=Msg) -> {ok, <<304:?INT_PROTO_ID, (erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_remove(Msg)))/binary>>};
encode(#sc_battle_object_stealth_add{}=Msg) -> {ok, <<305:?INT_PROTO_ID, (erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_stealth_add(Msg)))/binary>>};
encode(#sc_battle_object_stealth_remove{}=Msg) -> {ok, <<306:?INT_PROTO_ID, (erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_stealth_remove(Msg)))/binary>>};
encode(#sc_battle_camera_boss{}=Msg) -> {ok, <<307:?INT_PROTO_ID, (erlang:iolist_to_binary(battle_pb:encode_sc_battle_camera_boss(Msg)))/binary>>};
encode(#sc_battle_camera_normal{}=Msg) -> {ok, <<308:?INT_PROTO_ID, (erlang:iolist_to_binary(battle_pb:encode_sc_battle_camera_normal(Msg)))/binary>>};
encode(#sc_battle_object_ai_add{}=Msg) -> {ok, <<309:?INT_PROTO_ID, (erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_ai_add(Msg)))/binary>>};
encode(#sc_battle_object_ai_remove{}=Msg) -> {ok, <<310:?INT_PROTO_ID, (erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_ai_remove(Msg)))/binary>>};
encode(#sc_item_add{}=Msg) -> {ok, <<501:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_add(Msg)))/binary>>};
encode(#sc_item_update{}=Msg) -> {ok, <<502:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_update(Msg)))/binary>>};
encode(#sc_item_delete{}=Msg) -> {ok, <<503:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_delete(Msg)))/binary>>};
encode(#sc_item_init{}=Msg) -> {ok, <<504:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_init(Msg)))/binary>>};
encode(#cs_item_sort{}=Msg) -> {ok, <<505:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_sort(Msg)))/binary>>};
encode(#sc_item_equip_update{}=Msg) -> {ok, <<506:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_equip_update(Msg)))/binary>>};
encode(#cs_item_equip_take_on{}=Msg) -> {ok, <<507:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_equip_take_on(Msg)))/binary>>};
encode(#sc_item_equip_take_on{}=Msg) -> {ok, <<508:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_equip_take_on(Msg)))/binary>>};
encode(#cs_item_equip_take_off{}=Msg) -> {ok, <<509:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_equip_take_off(Msg)))/binary>>};
encode(#sc_item_equip_take_off{}=Msg) -> {ok, <<510:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_equip_take_off(Msg)))/binary>>};
encode(#cs_item_sale{}=Msg) -> {ok, <<511:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_sale(Msg)))/binary>>};
encode(#sc_item_sale{}=Msg) -> {ok, <<512:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_sale(Msg)))/binary>>};
encode(#cs_item_equip_upgrade{}=Msg) -> {ok, <<513:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_equip_upgrade(Msg)))/binary>>};
encode(#sc_item_equip_upgrade{}=Msg) -> {ok, <<514:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_equip_upgrade(Msg)))/binary>>};
encode(#cs_item_equip_strengthen{}=Msg) -> {ok, <<515:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_equip_strengthen(Msg)))/binary>>};
encode(#sc_item_equip_strengthen{}=Msg) -> {ok, <<516:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_equip_strengthen(Msg)))/binary>>};
encode(#cs_item_use{}=Msg) -> {ok, <<517:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_use(Msg)))/binary>>};
encode(#sc_item_use{}=Msg) -> {ok, <<518:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_use(Msg)))/binary>>};
encode(#cs_item_compose{}=Msg) -> {ok, <<519:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_compose(Msg)))/binary>>};
encode(#sc_item_compose{}=Msg) -> {ok, <<520:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_compose(Msg)))/binary>>};
encode(#cs_item_decompose{}=Msg) -> {ok, <<521:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_decompose(Msg)))/binary>>};
encode(#sc_item_decompose{}=Msg) -> {ok, <<522:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_decompose(Msg)))/binary>>};
encode(#cs_item_equip_gemstone_inlay{}=Msg) -> {ok, <<523:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_equip_gemstone_inlay(Msg)))/binary>>};
encode(#sc_item_equip_gemstone_inlay{}=Msg) -> {ok, <<524:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_equip_gemstone_inlay(Msg)))/binary>>};
encode(#cs_item_equip_polish{}=Msg) -> {ok, <<525:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_equip_polish(Msg)))/binary>>};
encode(#sc_item_equip_polish{}=Msg) -> {ok, <<526:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_equip_polish(Msg)))/binary>>};
encode(#cs_item_equip_inherit{}=Msg) -> {ok, <<527:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_equip_inherit(Msg)))/binary>>};
encode(#sc_item_equip_inherit{}=Msg) -> {ok, <<528:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_equip_inherit(Msg)))/binary>>};
encode(#sc_item_equip_resonate{}=Msg) -> {ok, <<530:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_equip_resonate(Msg)))/binary>>};
encode(#cs_item_gemstone_compose{}=Msg) -> {ok, <<531:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_cs_item_gemstone_compose(Msg)))/binary>>};
encode(#sc_item_gemstone_compose{}=Msg) -> {ok, <<532:?INT_PROTO_ID, (erlang:iolist_to_binary(item_pb:encode_sc_item_gemstone_compose(Msg)))/binary>>};
encode(#cs_chat{}=Msg) -> {ok, <<601:?INT_PROTO_ID, (erlang:iolist_to_binary(chat_pb:encode_cs_chat(Msg)))/binary>>};
encode(#sc_chat{}=Msg) -> {ok, <<602:?INT_PROTO_ID, (erlang:iolist_to_binary(chat_pb:encode_sc_chat(Msg)))/binary>>};
encode(#sc_chat_notice{}=Msg) -> {ok, <<603:?INT_PROTO_ID, (erlang:iolist_to_binary(chat_pb:encode_sc_chat_notice(Msg)))/binary>>};
encode(#cs_common_operation_verify{}=Msg) -> {ok, <<701:?INT_PROTO_ID, (erlang:iolist_to_binary(common_pb:encode_cs_common_operation_verify(Msg)))/binary>>};
encode(#sc_common_operation_verify{}=Msg) -> {ok, <<702:?INT_PROTO_ID, (erlang:iolist_to_binary(common_pb:encode_sc_common_operation_verify(Msg)))/binary>>};
encode(#sc_common_currency{}=Msg) -> {ok, <<704:?INT_PROTO_ID, (erlang:iolist_to_binary(common_pb:encode_sc_common_currency(Msg)))/binary>>};
encode(#sc_common_enercy_time{}=Msg) -> {ok, <<705:?INT_PROTO_ID, (erlang:iolist_to_binary(common_pb:encode_sc_common_enercy_time(Msg)))/binary>>};
encode(#sc_dup_fight_info{}=Msg) -> {ok, <<801:?INT_PROTO_ID, (erlang:iolist_to_binary(chapter_fight_pb:encode_sc_dup_fight_info(Msg)))/binary>>};
encode(#cs_chapter_fight_enter{}=Msg) -> {ok, <<802:?INT_PROTO_ID, (erlang:iolist_to_binary(chapter_fight_pb:encode_cs_chapter_fight_enter(Msg)))/binary>>};
encode(#sc_chapter_fight_enter_response{}=Msg) -> {ok, <<803:?INT_PROTO_ID, (erlang:iolist_to_binary(chapter_fight_pb:encode_sc_chapter_fight_enter_response(Msg)))/binary>>};
encode(#cs_dup_fight_push{}=Msg) -> {ok, <<804:?INT_PROTO_ID, (erlang:iolist_to_binary(chapter_fight_pb:encode_cs_dup_fight_push(Msg)))/binary>>};
encode(#sc_dup_fight_push{}=Msg) -> {ok, <<805:?INT_PROTO_ID, (erlang:iolist_to_binary(chapter_fight_pb:encode_sc_dup_fight_push(Msg)))/binary>>};
encode(#sc_chapter_fight_chest{}=Msg) -> {ok, <<806:?INT_PROTO_ID, (erlang:iolist_to_binary(chapter_fight_pb:encode_sc_chapter_fight_chest(Msg)))/binary>>};
encode(#cs_chapter_fight_open_chest{}=Msg) -> {ok, <<807:?INT_PROTO_ID, (erlang:iolist_to_binary(chapter_fight_pb:encode_cs_chapter_fight_open_chest(Msg)))/binary>>};
encode(#sc_chapter_fight_open_chest{}=Msg) -> {ok, <<808:?INT_PROTO_ID, (erlang:iolist_to_binary(chapter_fight_pb:encode_sc_chapter_fight_open_chest(Msg)))/binary>>};
encode(#sc_friend_list{}=Msg) -> {ok, <<901:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_sc_friend_list(Msg)))/binary>>};
encode(#sc_friend_add{}=Msg) -> {ok, <<902:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_sc_friend_add(Msg)))/binary>>};
encode(#sc_friend_del{}=Msg) -> {ok, <<903:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_sc_friend_del(Msg)))/binary>>};
encode(#cs_friend_add_request{}=Msg) -> {ok, <<904:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_cs_friend_add_request(Msg)))/binary>>};
encode(#sc_friend_add_responese{}=Msg) -> {ok, <<905:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_sc_friend_add_responese(Msg)))/binary>>};
encode(#cs_friend_del_request{}=Msg) -> {ok, <<906:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_cs_friend_del_request(Msg)))/binary>>};
encode(#sc_friend_del_responese{}=Msg) -> {ok, <<907:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_sc_friend_del_responese(Msg)))/binary>>};
encode(#cs_friend_add_black{}=Msg) -> {ok, <<908:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_cs_friend_add_black(Msg)))/binary>>};
encode(#cs_friend_remove_black{}=Msg) -> {ok, <<909:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_cs_friend_remove_black(Msg)))/binary>>};
encode(#cs_friend_apply_handle{}=Msg) -> {ok, <<910:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_cs_friend_apply_handle(Msg)))/binary>>};
encode(#cs_friend_search_request{}=Msg) -> {ok, <<911:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_cs_friend_search_request(Msg)))/binary>>};
encode(#sc_friend_search_respone{}=Msg) -> {ok, <<912:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_sc_friend_search_respone(Msg)))/binary>>};
encode(#cs_friend_recommond{}=Msg) -> {ok, <<913:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_cs_friend_recommond(Msg)))/binary>>};
encode(#cs_friend_give{}=Msg) -> {ok, <<914:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_cs_friend_give(Msg)))/binary>>};
encode(#cs_friend_receive{}=Msg) -> {ok, <<915:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_cs_friend_receive(Msg)))/binary>>};
encode(#sc_friend_give_list{}=Msg) -> {ok, <<916:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_sc_friend_give_list(Msg)))/binary>>};
encode(#sc_friend_receive_list{}=Msg) -> {ok, <<917:?INT_PROTO_ID, (erlang:iolist_to_binary(friend_pb:encode_sc_friend_receive_list(Msg)))/binary>>};
encode(#cs_random_fight_info{}=Msg) -> {ok, <<1001:?INT_PROTO_ID, (erlang:iolist_to_binary(random_fight_pb:encode_cs_random_fight_info(Msg)))/binary>>};
encode(#sc_random_fight_info{}=Msg) -> {ok, <<1002:?INT_PROTO_ID, (erlang:iolist_to_binary(random_fight_pb:encode_sc_random_fight_info(Msg)))/binary>>};
encode(#cs_random_fight_refresh{}=Msg) -> {ok, <<1003:?INT_PROTO_ID, (erlang:iolist_to_binary(random_fight_pb:encode_cs_random_fight_refresh(Msg)))/binary>>};
encode(#cs_all_fight_info{}=Msg) -> {ok, <<1004:?INT_PROTO_ID, (erlang:iolist_to_binary(random_fight_pb:encode_cs_all_fight_info(Msg)))/binary>>};
encode(#sc_all_fight_info_responese{}=Msg) -> {ok, <<1005:?INT_PROTO_ID, (erlang:iolist_to_binary(random_fight_pb:encode_sc_all_fight_info_responese(Msg)))/binary>>};
encode(#cs_random_fight_enter{}=Msg) -> {ok, <<1006:?INT_PROTO_ID, (erlang:iolist_to_binary(random_fight_pb:encode_cs_random_fight_enter(Msg)))/binary>>};
encode(#sc_random_fight_enter_response{}=Msg) -> {ok, <<1007:?INT_PROTO_ID, (erlang:iolist_to_binary(random_fight_pb:encode_sc_random_fight_enter_response(Msg)))/binary>>};
encode(#cs_pass_fight_query_request{}=Msg) -> {ok, <<1101:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_query_request(Msg)))/binary>>};
encode(#sc_pass_fight_query_respone{}=Msg) -> {ok, <<1102:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_query_respone(Msg)))/binary>>};
encode(#cs_pass_fight_reset_request{}=Msg) -> {ok, <<1103:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_reset_request(Msg)))/binary>>};
encode(#sc_pass_fight_reset_respone{}=Msg) -> {ok, <<1104:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_reset_respone(Msg)))/binary>>};
encode(#cs_pass_fight_dup_request{}=Msg) -> {ok, <<1105:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_dup_request(Msg)))/binary>>};
encode(#sc_pass_fight_dup_respone{}=Msg) -> {ok, <<1106:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_dup_respone(Msg)))/binary>>};
encode(#cs_pass_fight_dup_cancel_request{}=Msg) -> {ok, <<1107:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_dup_cancel_request(Msg)))/binary>>};
encode(#sc_pass_fight_dup_reward{}=Msg) -> {ok, <<1108:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_dup_reward(Msg)))/binary>>};
encode(#cs_pass_fight_fight_request{}=Msg) -> {ok, <<1109:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_fight_request(Msg)))/binary>>};
encode(#sc_pass_fight_fight_respone{}=Msg) -> {ok, <<1110:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_fight_respone(Msg)))/binary>>};
encode(#sc_pass_fight_quit_stage{}=Msg) -> {ok, <<1111:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_quit_stage(Msg)))/binary>>};
encode(#cs_pass_fight_open_chests_request{}=Msg) -> {ok, <<1112:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_open_chests_request(Msg)))/binary>>};
encode(#sc_pass_fight_open_chests_respone{}=Msg) -> {ok, <<1113:?INT_PROTO_ID, (erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_open_chests_respone(Msg)))/binary>>};
encode(#cs_welfare_fight_fight_request{}=Msg) -> {ok, <<1201:?INT_PROTO_ID, (erlang:iolist_to_binary(welfare_fight_pb:encode_cs_welfare_fight_fight_request(Msg)))/binary>>};
encode(#sc_welfare_fight_fight_response{}=Msg) -> {ok, <<1202:?INT_PROTO_ID, (erlang:iolist_to_binary(welfare_fight_pb:encode_sc_welfare_fight_fight_response(Msg)))/binary>>};
encode(#cs_welfare_fight_query_request{}=Msg) -> {ok, <<1206:?INT_PROTO_ID, (erlang:iolist_to_binary(welfare_fight_pb:encode_cs_welfare_fight_query_request(Msg)))/binary>>};
encode(#sc_welfare_fight_query_response{}=Msg) -> {ok, <<1207:?INT_PROTO_ID, (erlang:iolist_to_binary(welfare_fight_pb:encode_sc_welfare_fight_query_response(Msg)))/binary>>};
encode(#sc_pet_list{}=Msg) -> {ok, <<1301:?INT_PROTO_ID, (erlang:iolist_to_binary(pet_pb:encode_sc_pet_list(Msg)))/binary>>};
encode(#sc_pet_update{}=Msg) -> {ok, <<1302:?INT_PROTO_ID, (erlang:iolist_to_binary(pet_pb:encode_sc_pet_update(Msg)))/binary>>};
encode(#cs_pet_fight{}=Msg) -> {ok, <<1303:?INT_PROTO_ID, (erlang:iolist_to_binary(pet_pb:encode_cs_pet_fight(Msg)))/binary>>};
encode(#sc_pet_fight{}=Msg) -> {ok, <<1304:?INT_PROTO_ID, (erlang:iolist_to_binary(pet_pb:encode_sc_pet_fight(Msg)))/binary>>};
encode(#cs_pet_feed{}=Msg) -> {ok, <<1305:?INT_PROTO_ID, (erlang:iolist_to_binary(pet_pb:encode_cs_pet_feed(Msg)))/binary>>};
encode(#sc_pet_feed{}=Msg) -> {ok, <<1306:?INT_PROTO_ID, (erlang:iolist_to_binary(pet_pb:encode_sc_pet_feed(Msg)))/binary>>};
encode(#cs_pet_equip_inlay{}=Msg) -> {ok, <<1307:?INT_PROTO_ID, (erlang:iolist_to_binary(pet_pb:encode_cs_pet_equip_inlay(Msg)))/binary>>};
encode(#sc_pet_equip_inlay{}=Msg) -> {ok, <<1308:?INT_PROTO_ID, (erlang:iolist_to_binary(pet_pb:encode_sc_pet_equip_inlay(Msg)))/binary>>};
encode(#cs_shop_bonus_point_query{}=Msg) -> {ok, <<1401:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_cs_shop_bonus_point_query(Msg)))/binary>>};
encode(#sc_shop_bonus_point_query_response{}=Msg) -> {ok, <<1402:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_sc_shop_bonus_point_query_response(Msg)))/binary>>};
encode(#cs_shop_bonus_point_buy{}=Msg) -> {ok, <<1403:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_cs_shop_bonus_point_buy(Msg)))/binary>>};
encode(#sc_shop_bonus_point_buy_response{}=Msg) -> {ok, <<1404:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_sc_shop_bonus_point_buy_response(Msg)))/binary>>};
encode(#cs_shop_mystery_query{}=Msg) -> {ok, <<1501:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_cs_shop_mystery_query(Msg)))/binary>>};
encode(#sc_shop_mystery_query_response{}=Msg) -> {ok, <<1502:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_sc_shop_mystery_query_response(Msg)))/binary>>};
encode(#cs_shop_mystery_refresh{}=Msg) -> {ok, <<1503:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_cs_shop_mystery_refresh(Msg)))/binary>>};
encode(#cs_shop_mystery_buy{}=Msg) -> {ok, <<1504:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_cs_shop_mystery_buy(Msg)))/binary>>};
encode(#sc_shop_mystery_buy_response{}=Msg) -> {ok, <<1505:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_sc_shop_mystery_buy_response(Msg)))/binary>>};
encode(#cs_shop_common_query{}=Msg) -> {ok, <<1601:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_cs_shop_common_query(Msg)))/binary>>};
encode(#sc_shop_common_query_response{}=Msg) -> {ok, <<1602:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_sc_shop_common_query_response(Msg)))/binary>>};
encode(#cs_shop_common_buy{}=Msg) -> {ok, <<1603:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_cs_shop_common_buy(Msg)))/binary>>};
encode(#sc_shop_common_buy_response{}=Msg) -> {ok, <<1604:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_sc_shop_common_buy_response(Msg)))/binary>>};
encode(#cs_shop_common_gift{}=Msg) -> {ok, <<1605:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_cs_shop_common_gift(Msg)))/binary>>};
encode(#cs_shop_common_gift_response{}=Msg) -> {ok, <<1606:?INT_PROTO_ID, (erlang:iolist_to_binary(shop_pb:encode_cs_shop_common_gift_response(Msg)))/binary>>};
encode(#sc_mission_info{}=Msg) -> {ok, <<1700:?INT_PROTO_ID, (erlang:iolist_to_binary(mission_pb:encode_sc_mission_info(Msg)))/binary>>};
encode(#cs_mission_complete{}=Msg) -> {ok, <<1701:?INT_PROTO_ID, (erlang:iolist_to_binary(mission_pb:encode_cs_mission_complete(Msg)))/binary>>};
encode(#sc_mission_complete_reply{}=Msg) -> {ok, <<1702:?INT_PROTO_ID, (erlang:iolist_to_binary(mission_pb:encode_sc_mission_complete_reply(Msg)))/binary>>};
encode(#cs_mission_get{}=Msg) -> {ok, <<1703:?INT_PROTO_ID, (erlang:iolist_to_binary(mission_pb:encode_cs_mission_get(Msg)))/binary>>};
encode(#sc_mail_list_query_respone{}=Msg) -> {ok, <<1802:?INT_PROTO_ID, (erlang:iolist_to_binary(mail_pb:encode_sc_mail_list_query_respone(Msg)))/binary>>};
encode(#sc_mail_info_notice{}=Msg) -> {ok, <<1803:?INT_PROTO_ID, (erlang:iolist_to_binary(mail_pb:encode_sc_mail_info_notice(Msg)))/binary>>};
encode(#cs_mail_get_reward{}=Msg) -> {ok, <<1804:?INT_PROTO_ID, (erlang:iolist_to_binary(mail_pb:encode_cs_mail_get_reward(Msg)))/binary>>};
encode(#sc_mail_get_reward{}=Msg) -> {ok, <<1805:?INT_PROTO_ID, (erlang:iolist_to_binary(mail_pb:encode_sc_mail_get_reward(Msg)))/binary>>};
encode(#cs_mail_lookup{}=Msg) -> {ok, <<1806:?INT_PROTO_ID, (erlang:iolist_to_binary(mail_pb:encode_cs_mail_lookup(Msg)))/binary>>};
encode(#sc_mail_lookup{}=Msg) -> {ok, <<1807:?INT_PROTO_ID, (erlang:iolist_to_binary(mail_pb:encode_sc_mail_lookup(Msg)))/binary>>};
encode(#cs_mail_all_get_reward{}=Msg) -> {ok, <<1809:?INT_PROTO_ID, (erlang:iolist_to_binary(mail_pb:encode_cs_mail_all_get_reward(Msg)))/binary>>};
encode(#sc_mail_all_get_reward{}=Msg) -> {ok, <<1810:?INT_PROTO_ID, (erlang:iolist_to_binary(mail_pb:encode_sc_mail_all_get_reward(Msg)))/binary>>};
encode(#sc_guild_war_door{}=Msg) -> {ok, <<1901:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_war_pb:encode_sc_guild_war_door(Msg)))/binary>>};
encode(#cs_guild_war_enter{}=Msg) -> {ok, <<1903:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_war_pb:encode_cs_guild_war_enter(Msg)))/binary>>};
encode(#sc_guild_war_enter_response{}=Msg) -> {ok, <<1904:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_war_pb:encode_sc_guild_war_enter_response(Msg)))/binary>>};
encode(#sc_guild_war_billing{}=Msg) -> {ok, <<1905:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_war_pb:encode_sc_guild_war_billing(Msg)))/binary>>};
encode(#sc_guild_war_update_info{}=Msg) -> {ok, <<1906:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_war_pb:encode_sc_guild_war_update_info(Msg)))/binary>>};
encode(#sc_guild_update{}=Msg) -> {ok, <<2000:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_sc_guild_update(Msg)))/binary>>};
encode(#cs_guild_memeber_query{}=Msg) -> {ok, <<2001:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_cs_guild_memeber_query(Msg)))/binary>>};
encode(#sc_guild_member_update{}=Msg) -> {ok, <<2002:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_sc_guild_member_update(Msg)))/binary>>};
encode(#cs_guild_memeber_operation{}=Msg) -> {ok, <<2003:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_cs_guild_memeber_operation(Msg)))/binary>>};
encode(#cs_guild_list_query{}=Msg) -> {ok, <<2004:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_cs_guild_list_query(Msg)))/binary>>};
encode(#sc_guild_list_update{}=Msg) -> {ok, <<2005:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_sc_guild_list_update(Msg)))/binary>>};
encode(#cs_guild_search{}=Msg) -> {ok, <<2006:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_cs_guild_search(Msg)))/binary>>};
encode(#sc_guild_search_response{}=Msg) -> {ok, <<2007:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_sc_guild_search_response(Msg)))/binary>>};
encode(#cs_guild_create{}=Msg) -> {ok, <<2008:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_cs_guild_create(Msg)))/binary>>};
encode(#cs_guild_quit{}=Msg) -> {ok, <<2009:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_cs_guild_quit(Msg)))/binary>>};
encode(#cs_guild_apply{}=Msg) -> {ok, <<2010:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_cs_guild_apply(Msg)))/binary>>};
encode(#sc_guild_apply_response{}=Msg) -> {ok, <<2011:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_sc_guild_apply_response(Msg)))/binary>>};
encode(#cs_guild_apply_onekey{}=Msg) -> {ok, <<2012:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_cs_guild_apply_onekey(Msg)))/binary>>};
encode(#sc_guild_apply_onekey_response{}=Msg) -> {ok, <<2013:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_sc_guild_apply_onekey_response(Msg)))/binary>>};
encode(#cs_guild_apply_reply{}=Msg) -> {ok, <<2014:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_cs_guild_apply_reply(Msg)))/binary>>};
encode(#cs_guild_apply_list_query{}=Msg) -> {ok, <<2015:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_cs_guild_apply_list_query(Msg)))/binary>>};
encode(#sc_guild_apply_list_update{}=Msg) -> {ok, <<2016:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_sc_guild_apply_list_update(Msg)))/binary>>};
encode(#sc_guild_log_update{}=Msg) -> {ok, <<2017:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_sc_guild_log_update(Msg)))/binary>>};
encode(#sc_guild_log_init{}=Msg) -> {ok, <<2018:?INT_PROTO_ID, (erlang:iolist_to_binary(guild_pb:encode_sc_guild_log_init(Msg)))/binary>>};
encode(#cs_ranking_list_query_request{}=Msg) -> {ok, <<2101:?INT_PROTO_ID, (erlang:iolist_to_binary(ranking_pb:encode_cs_ranking_list_query_request(Msg)))/binary>>};
encode(#sc_ranking_list_query_respone{}=Msg) -> {ok, <<2102:?INT_PROTO_ID, (erlang:iolist_to_binary(ranking_pb:encode_sc_ranking_list_query_respone(Msg)))/binary>>};
encode(#sc_ranking_update_notice{}=Msg) -> {ok, <<2103:?INT_PROTO_ID, (erlang:iolist_to_binary(ranking_pb:encode_sc_ranking_update_notice(Msg)))/binary>>};
encode(#sc_guid_ranking_response{}=Msg) -> {ok, <<2104:?INT_PROTO_ID, (erlang:iolist_to_binary(ranking_pb:encode_sc_guid_ranking_response(Msg)))/binary>>};
encode(#sc_vip_info{}=Msg) -> {ok, <<2201:?INT_PROTO_ID, (erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_info(Msg)))/binary>>};
encode(#sc_vip_times{}=Msg) -> {ok, <<2202:?INT_PROTO_ID, (erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_times(Msg)))/binary>>};
encode(#cs_vip_buy_times{}=Msg) -> {ok, <<2203:?INT_PROTO_ID, (erlang:iolist_to_binary(vip_level_pb:encode_cs_vip_buy_times(Msg)))/binary>>};
encode(#sc_vip_buy_times{}=Msg) -> {ok, <<2204:?INT_PROTO_ID, (erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_buy_times(Msg)))/binary>>};
encode(#cs_vip_use_bun{}=Msg) -> {ok, <<2205:?INT_PROTO_ID, (erlang:iolist_to_binary(vip_level_pb:encode_cs_vip_use_bun(Msg)))/binary>>};
encode(#sc_vip_use_bun_result{}=Msg) -> {ok, <<2206:?INT_PROTO_ID, (erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_use_bun_result(Msg)))/binary>>};
encode(#cs_vip_buy_gold{}=Msg) -> {ok, <<2207:?INT_PROTO_ID, (erlang:iolist_to_binary(vip_level_pb:encode_cs_vip_buy_gold(Msg)))/binary>>};
encode(#sc_vip_buy_gold{}=Msg) -> {ok, <<2208:?INT_PROTO_ID, (erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_buy_gold(Msg)))/binary>>};
encode(#sc_vip_recharge{}=Msg) -> {ok, <<2209:?INT_PROTO_ID, (erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_recharge(Msg)))/binary>>};
encode(#cs_common_fight_kill_monster{}=Msg) -> {ok, <<2301:?INT_PROTO_ID, (erlang:iolist_to_binary(common_fight_pb:encode_cs_common_fight_kill_monster(Msg)))/binary>>};
encode(#cs_common_fight_dead{}=Msg) -> {ok, <<2302:?INT_PROTO_ID, (erlang:iolist_to_binary(common_fight_pb:encode_cs_common_fight_dead(Msg)))/binary>>};
encode(#cs_common_fight_relive{}=Msg) -> {ok, <<2303:?INT_PROTO_ID, (erlang:iolist_to_binary(common_fight_pb:encode_cs_common_fight_relive(Msg)))/binary>>};
encode(#sc_common_fight_relive_response{}=Msg) -> {ok, <<2304:?INT_PROTO_ID, (erlang:iolist_to_binary(common_fight_pb:encode_sc_common_fight_relive_response(Msg)))/binary>>};
encode(#cs_common_fight_quit{}=Msg) -> {ok, <<2305:?INT_PROTO_ID, (erlang:iolist_to_binary(common_fight_pb:encode_cs_common_fight_quit(Msg)))/binary>>};
encode(#sc_common_fight_quit_reponse{}=Msg) -> {ok, <<2306:?INT_PROTO_ID, (erlang:iolist_to_binary(common_fight_pb:encode_sc_common_fight_quit_reponse(Msg)))/binary>>};
encode(#sc_first_fight_end{}=Msg) -> {ok, <<2307:?INT_PROTO_ID, (erlang:iolist_to_binary(common_fight_pb:encode_sc_first_fight_end(Msg)))/binary>>};
encode(#cs_master_fight_enter{}=Msg) -> {ok, <<2401:?INT_PROTO_ID, (erlang:iolist_to_binary(master_fight_pb:encode_cs_master_fight_enter(Msg)))/binary>>};
encode(#sc_master_fight_enter_response{}=Msg) -> {ok, <<2402:?INT_PROTO_ID, (erlang:iolist_to_binary(master_fight_pb:encode_sc_master_fight_enter_response(Msg)))/binary>>};
encode(#cs_team_create{}=Msg) -> {ok, <<2501:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_create(Msg)))/binary>>};
encode(#sc_team_create_reply{}=Msg) -> {ok, <<2502:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_create_reply(Msg)))/binary>>};
encode(#cs_team_quit{}=Msg) -> {ok, <<2503:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_quit(Msg)))/binary>>};
encode(#sc_team_quit_reply{}=Msg) -> {ok, <<2504:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_quit_reply(Msg)))/binary>>};
encode(#sc_team_member_change{}=Msg) -> {ok, <<2505:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_member_change(Msg)))/binary>>};
encode(#sc_team_info{}=Msg) -> {ok, <<2506:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_info(Msg)))/binary>>};
encode(#cs_team_invite_agree{}=Msg) -> {ok, <<2507:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_invite_agree(Msg)))/binary>>};
encode(#sc_team_invite_agree_reply{}=Msg) -> {ok, <<2508:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_invite_agree_reply(Msg)))/binary>>};
encode(#cs_team_invite_list{}=Msg) -> {ok, <<2509:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_invite_list(Msg)))/binary>>};
encode(#sc_team_invite_list_reply{}=Msg) -> {ok, <<2510:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_invite_list_reply(Msg)))/binary>>};
encode(#cs_team_invite{}=Msg) -> {ok, <<2511:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_invite(Msg)))/binary>>};
encode(#sc_team_invite_reply{}=Msg) -> {ok, <<2512:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_invite_reply(Msg)))/binary>>};
encode(#sc_team_invite_list_change{}=Msg) -> {ok, <<2513:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_invite_list_change(Msg)))/binary>>};
encode(#cs_team_kick{}=Msg) -> {ok, <<2514:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_kick(Msg)))/binary>>};
encode(#sc_team_kick_reply{}=Msg) -> {ok, <<2515:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_kick_reply(Msg)))/binary>>};
encode(#sc_team_be_kicked{}=Msg) -> {ok, <<2516:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_be_kicked(Msg)))/binary>>};
encode(#cs_team_leader_transfer{}=Msg) -> {ok, <<2517:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_leader_transfer(Msg)))/binary>>};
encode(#sc_team_leader_transfer_reply{}=Msg) -> {ok, <<2518:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_leader_transfer_reply(Msg)))/binary>>};
encode(#cs_team_start_activity{}=Msg) -> {ok, <<2519:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_start_activity(Msg)))/binary>>};
encode(#sc_team_start_activity_reply{}=Msg) -> {ok, <<2520:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_start_activity_reply(Msg)))/binary>>};
encode(#sc_team_activity{}=Msg) -> {ok, <<2521:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_activity(Msg)))/binary>>};
encode(#cs_team_activity_agree{}=Msg) -> {ok, <<2522:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_activity_agree(Msg)))/binary>>};
encode(#sc_team_activity_agree_reply{}=Msg) -> {ok, <<2523:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_activity_agree_reply(Msg)))/binary>>};
encode(#sc_team_ready_info{}=Msg) -> {ok, <<2524:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_ready_info(Msg)))/binary>>};
encode(#cs_team_auto_match{}=Msg) -> {ok, <<2525:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_auto_match(Msg)))/binary>>};
encode(#sc_team_auto_match{}=Msg) -> {ok, <<2526:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_auto_match(Msg)))/binary>>};
encode(#cs_personal_auto_match{}=Msg) -> {ok, <<2527:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_personal_auto_match(Msg)))/binary>>};
encode(#sc_personal_auto_match{}=Msg) -> {ok, <<2528:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_personal_auto_match(Msg)))/binary>>};
encode(#sc_personal_auto_match_state{}=Msg) -> {ok, <<2529:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_personal_auto_match_state(Msg)))/binary>>};
encode(#cs_auto_match_team_list{}=Msg) -> {ok, <<2530:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_auto_match_team_list(Msg)))/binary>>};
encode(#sc_auto_match_team_list{}=Msg) -> {ok, <<2531:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_auto_match_team_list(Msg)))/binary>>};
encode(#cs_team_apply{}=Msg) -> {ok, <<2532:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_apply(Msg)))/binary>>};
encode(#sc_team_apply{}=Msg) -> {ok, <<2533:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_apply(Msg)))/binary>>};
encode(#cs_get_team_apply_list{}=Msg) -> {ok, <<2534:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_get_team_apply_list(Msg)))/binary>>};
encode(#sc_team_apply_list{}=Msg) -> {ok, <<2535:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_sc_team_apply_list(Msg)))/binary>>};
encode(#cs_clean_apply_list{}=Msg) -> {ok, <<2536:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_clean_apply_list(Msg)))/binary>>};
encode(#cs_team_apply_agree{}=Msg) -> {ok, <<2537:?INT_PROTO_ID, (erlang:iolist_to_binary(team_pb:encode_cs_team_apply_agree(Msg)))/binary>>};
encode(#sc_activity_sign_info{}=Msg) -> {ok, <<2601:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_activity_sign_info(Msg)))/binary>>};
encode(#cs_activity_sign{}=Msg) -> {ok, <<2602:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_cs_activity_sign(Msg)))/binary>>};
encode(#sc_activity_sign_reply{}=Msg) -> {ok, <<2603:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_activity_sign_reply(Msg)))/binary>>};
encode(#sc_activity_list{}=Msg) -> {ok, <<2604:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_activity_list(Msg)))/binary>>};
encode(#sc_activity_energy_info{}=Msg) -> {ok, <<2605:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_activity_energy_info(Msg)))/binary>>};
encode(#cs_activity_energy{}=Msg) -> {ok, <<2606:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_cs_activity_energy(Msg)))/binary>>};
encode(#sc_activity_energy_reply{}=Msg) -> {ok, <<2607:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_activity_energy_reply(Msg)))/binary>>};
encode(#sc_activity_fund_info{}=Msg) -> {ok, <<2608:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_activity_fund_info(Msg)))/binary>>};
encode(#cs_activity_fund_buy{}=Msg) -> {ok, <<2609:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_cs_activity_fund_buy(Msg)))/binary>>};
encode(#sc_activity_fund_buy_reply{}=Msg) -> {ok, <<2610:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_activity_fund_buy_reply(Msg)))/binary>>};
encode(#cs_activity_fund_award{}=Msg) -> {ok, <<2611:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_cs_activity_fund_award(Msg)))/binary>>};
encode(#sc_activity_fund_award_reply{}=Msg) -> {ok, <<2612:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_activity_fund_award_reply(Msg)))/binary>>};
encode(#sc_normal_activity_info{}=Msg) -> {ok, <<2613:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_normal_activity_info(Msg)))/binary>>};
encode(#cs_normal_activity_award{}=Msg) -> {ok, <<2614:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_cs_normal_activity_award(Msg)))/binary>>};
encode(#sc_normal_activity_award_reply{}=Msg) -> {ok, <<2615:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_normal_activity_award_reply(Msg)))/binary>>};
encode(#sc_activity_vip_info{}=Msg) -> {ok, <<2616:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_activity_vip_info(Msg)))/binary>>};
encode(#cs_activity_vip_buy{}=Msg) -> {ok, <<2617:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_cs_activity_vip_buy(Msg)))/binary>>};
encode(#sc_activity_vip_buy_reply{}=Msg) -> {ok, <<2618:?INT_PROTO_ID, (erlang:iolist_to_binary(activity_pb:encode_sc_activity_vip_buy_reply(Msg)))/binary>>};
encode(#cs_arena_info{}=Msg) -> {ok, <<2701:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_cs_arena_info(Msg)))/binary>>};
encode(#sc_arena_info_reply{}=Msg) -> {ok, <<2702:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_sc_arena_info_reply(Msg)))/binary>>};
encode(#cs_arena_button{}=Msg) -> {ok, <<2703:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_cs_arena_button(Msg)))/binary>>};
encode(#sc_arena_button_reply{}=Msg) -> {ok, <<2704:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_sc_arena_button_reply(Msg)))/binary>>};
encode(#cs_arena_challenge{}=Msg) -> {ok, <<2705:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_cs_arena_challenge(Msg)))/binary>>};
encode(#sc_arena_challenge_reply{}=Msg) -> {ok, <<2706:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_sc_arena_challenge_reply(Msg)))/binary>>};
encode(#cs_arena_challenge_account{}=Msg) -> {ok, <<2707:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_cs_arena_challenge_account(Msg)))/binary>>};
encode(#cs_arena_record{}=Msg) -> {ok, <<2708:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_cs_arena_record(Msg)))/binary>>};
encode(#sc_arena_record_reply{}=Msg) -> {ok, <<2709:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_sc_arena_record_reply(Msg)))/binary>>};
encode(#cs_arena_times{}=Msg) -> {ok, <<2710:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_cs_arena_times(Msg)))/binary>>};
encode(#sc_arena_times_reply{}=Msg) -> {ok, <<2711:?INT_PROTO_ID, (erlang:iolist_to_binary(arena_pb:encode_sc_arena_times_reply(Msg)))/binary>>};
encode(_) -> error.
decode(<<1:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_cs_login(B)};
decode(<<2:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_sc_login(B)};
decode(<<3:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_cs_login_reconnection(B)};
decode(<<4:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_sc_login_reconnection(B)};
decode(<<5:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_cs_login_logoff(B)};
decode(<<6:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_sc_login_repeat(B)};
decode(<<7:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_cs_login_heartbeat(B)};
decode(<<8:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_sc_login_heartbeat(B)};
decode(<<9:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_cs_login_proto_count(B)};
decode(<<10:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_cs_login_proto_clean(B)};
decode(<<11:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_sc_login_proto_count(B)};
decode(<<12:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_sc_login_proto_clean(B)};
decode(<<13:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_sc_login_role_list(B)};
decode(<<14:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_cs_login_role_list(B)};
decode(<<15:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_cs_login_role_choose(B)};
decode(<<16:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_cs_login_role_create(B)};
decode(<<17:?INT_PROTO_ID, B/binary>>) -> {ok, login_pb:decode_sc_login_role_response(B)};
decode(<<101:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_info(B)};
decode(<<102:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_sys_notice(B)};
decode(<<103:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_cs_player_info_modify(B)};
decode(<<104:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_info_modify(B)};
decode(<<105:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_cs_player_skill_upgrade(B)};
decode(<<106:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_skill_upgrade(B)};
decode(<<107:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_cs_player_dress_query(B)};
decode(<<108:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_dress_update(B)};
decode(<<109:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_cs_player_dress_use(B)};
decode(<<110:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_dress_use(B)};
decode(<<111:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_cs_player_title_query(B)};
decode(<<112:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_title_update(B)};
decode(<<113:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_cs_player_title_use(B)};
decode(<<114:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_title_use(B)};
decode(<<115:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_cs_player_detail_info_query(B)};
decode(<<116:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_detail_info_query(B)};
decode(<<117:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_cs_player_guide_info(B)};
decode(<<118:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_guide_info(B)};
decode(<<119:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_skill_change(B)};
decode(<<120:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_cs_player_limit(B)};
decode(<<121:?INT_PROTO_ID, B/binary>>) -> {ok, player_pb:decode_sc_player_limit(B)};
decode(<<150:?INT_PROTO_ID, B/binary>>) -> {ok, galaxy_pb:decode_cs_galaxy_upgrade(B)};
decode(<<151:?INT_PROTO_ID, B/binary>>) -> {ok, galaxy_pb:decode_sc_galaxy_upgrade_reply(B)};
decode(<<152:?INT_PROTO_ID, B/binary>>) -> {ok, galaxy_pb:decode_sc_galaxy_info(B)};
decode(<<160:?INT_PROTO_ID, B/binary>>) -> {ok, skill_pb:decode_sc_training_skill_info(B)};
decode(<<161:?INT_PROTO_ID, B/binary>>) -> {ok, skill_pb:decode_cs_training_skill_upgrade(B)};
decode(<<162:?INT_PROTO_ID, B/binary>>) -> {ok, skill_pb:decode_sc_training_skill_upgrade_reply(B)};
decode(<<200:?INT_PROTO_ID, B/binary>>) -> {ok, map_pb:decode_cs_map_action(B)};
decode(<<201:?INT_PROTO_ID, B/binary>>) -> {ok, map_pb:decode_sc_map_action(B)};
decode(<<202:?INT_PROTO_ID, B/binary>>) -> {ok, map_pb:decode_sc_map_enter_scene(B)};
decode(<<203:?INT_PROTO_ID, B/binary>>) -> {ok, map_pb:decode_cs_map_enter_scene(B)};
decode(<<205:?INT_PROTO_ID, B/binary>>) -> {ok, map_pb:decode_cs_map_skill_hit(B)};
decode(<<206:?INT_PROTO_ID, B/binary>>) -> {ok, map_pb:decode_sc_map_skill_hit(B)};
decode(<<207:?INT_PROTO_ID, B/binary>>) -> {ok, map_pb:decode_cs_map_enter_city(B)};
decode(<<208:?INT_PROTO_ID, B/binary>>) -> {ok, map_pb:decode_cs_map_lua_run_time(B)};
decode(<<209:?INT_PROTO_ID, B/binary>>) -> {ok, map_pb:decode_sc_map_lua_run_time(B)};
decode(<<301:?INT_PROTO_ID, B/binary>>) -> {ok, battle_pb:decode_sc_battle_info(B)};
decode(<<302:?INT_PROTO_ID, B/binary>>) -> {ok, battle_pb:decode_sc_battle_state(B)};
decode(<<303:?INT_PROTO_ID, B/binary>>) -> {ok, battle_pb:decode_sc_battle_object_add(B)};
decode(<<304:?INT_PROTO_ID, B/binary>>) -> {ok, battle_pb:decode_sc_battle_object_remove(B)};
decode(<<305:?INT_PROTO_ID, B/binary>>) -> {ok, battle_pb:decode_sc_battle_object_stealth_add(B)};
decode(<<306:?INT_PROTO_ID, B/binary>>) -> {ok, battle_pb:decode_sc_battle_object_stealth_remove(B)};
decode(<<307:?INT_PROTO_ID, B/binary>>) -> {ok, battle_pb:decode_sc_battle_camera_boss(B)};
decode(<<308:?INT_PROTO_ID, B/binary>>) -> {ok, battle_pb:decode_sc_battle_camera_normal(B)};
decode(<<309:?INT_PROTO_ID, B/binary>>) -> {ok, battle_pb:decode_sc_battle_object_ai_add(B)};
decode(<<310:?INT_PROTO_ID, B/binary>>) -> {ok, battle_pb:decode_sc_battle_object_ai_remove(B)};
decode(<<501:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_add(B)};
decode(<<502:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_update(B)};
decode(<<503:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_delete(B)};
decode(<<504:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_init(B)};
decode(<<505:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_sort(B)};
decode(<<506:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_equip_update(B)};
decode(<<507:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_equip_take_on(B)};
decode(<<508:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_equip_take_on(B)};
decode(<<509:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_equip_take_off(B)};
decode(<<510:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_equip_take_off(B)};
decode(<<511:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_sale(B)};
decode(<<512:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_sale(B)};
decode(<<513:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_equip_upgrade(B)};
decode(<<514:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_equip_upgrade(B)};
decode(<<515:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_equip_strengthen(B)};
decode(<<516:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_equip_strengthen(B)};
decode(<<517:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_use(B)};
decode(<<518:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_use(B)};
decode(<<519:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_compose(B)};
decode(<<520:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_compose(B)};
decode(<<521:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_decompose(B)};
decode(<<522:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_decompose(B)};
decode(<<523:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_equip_gemstone_inlay(B)};
decode(<<524:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_equip_gemstone_inlay(B)};
decode(<<525:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_equip_polish(B)};
decode(<<526:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_equip_polish(B)};
decode(<<527:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_equip_inherit(B)};
decode(<<528:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_equip_inherit(B)};
decode(<<530:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_equip_resonate(B)};
decode(<<531:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_cs_item_gemstone_compose(B)};
decode(<<532:?INT_PROTO_ID, B/binary>>) -> {ok, item_pb:decode_sc_item_gemstone_compose(B)};
decode(<<601:?INT_PROTO_ID, B/binary>>) -> {ok, chat_pb:decode_cs_chat(B)};
decode(<<602:?INT_PROTO_ID, B/binary>>) -> {ok, chat_pb:decode_sc_chat(B)};
decode(<<603:?INT_PROTO_ID, B/binary>>) -> {ok, chat_pb:decode_sc_chat_notice(B)};
decode(<<701:?INT_PROTO_ID, B/binary>>) -> {ok, common_pb:decode_cs_common_operation_verify(B)};
decode(<<702:?INT_PROTO_ID, B/binary>>) -> {ok, common_pb:decode_sc_common_operation_verify(B)};
decode(<<704:?INT_PROTO_ID, B/binary>>) -> {ok, common_pb:decode_sc_common_currency(B)};
decode(<<705:?INT_PROTO_ID, B/binary>>) -> {ok, common_pb:decode_sc_common_enercy_time(B)};
decode(<<801:?INT_PROTO_ID, B/binary>>) -> {ok, chapter_fight_pb:decode_sc_dup_fight_info(B)};
decode(<<802:?INT_PROTO_ID, B/binary>>) -> {ok, chapter_fight_pb:decode_cs_chapter_fight_enter(B)};
decode(<<803:?INT_PROTO_ID, B/binary>>) -> {ok, chapter_fight_pb:decode_sc_chapter_fight_enter_response(B)};
decode(<<804:?INT_PROTO_ID, B/binary>>) -> {ok, chapter_fight_pb:decode_cs_dup_fight_push(B)};
decode(<<805:?INT_PROTO_ID, B/binary>>) -> {ok, chapter_fight_pb:decode_sc_dup_fight_push(B)};
decode(<<806:?INT_PROTO_ID, B/binary>>) -> {ok, chapter_fight_pb:decode_sc_chapter_fight_chest(B)};
decode(<<807:?INT_PROTO_ID, B/binary>>) -> {ok, chapter_fight_pb:decode_cs_chapter_fight_open_chest(B)};
decode(<<808:?INT_PROTO_ID, B/binary>>) -> {ok, chapter_fight_pb:decode_sc_chapter_fight_open_chest(B)};
decode(<<901:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_sc_friend_list(B)};
decode(<<902:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_sc_friend_add(B)};
decode(<<903:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_sc_friend_del(B)};
decode(<<904:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_cs_friend_add_request(B)};
decode(<<905:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_sc_friend_add_responese(B)};
decode(<<906:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_cs_friend_del_request(B)};
decode(<<907:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_sc_friend_del_responese(B)};
decode(<<908:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_cs_friend_add_black(B)};
decode(<<909:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_cs_friend_remove_black(B)};
decode(<<910:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_cs_friend_apply_handle(B)};
decode(<<911:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_cs_friend_search_request(B)};
decode(<<912:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_sc_friend_search_respone(B)};
decode(<<913:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_cs_friend_recommond(B)};
decode(<<914:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_cs_friend_give(B)};
decode(<<915:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_cs_friend_receive(B)};
decode(<<916:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_sc_friend_give_list(B)};
decode(<<917:?INT_PROTO_ID, B/binary>>) -> {ok, friend_pb:decode_sc_friend_receive_list(B)};
decode(<<1001:?INT_PROTO_ID, B/binary>>) -> {ok, random_fight_pb:decode_cs_random_fight_info(B)};
decode(<<1002:?INT_PROTO_ID, B/binary>>) -> {ok, random_fight_pb:decode_sc_random_fight_info(B)};
decode(<<1003:?INT_PROTO_ID, B/binary>>) -> {ok, random_fight_pb:decode_cs_random_fight_refresh(B)};
decode(<<1004:?INT_PROTO_ID, B/binary>>) -> {ok, random_fight_pb:decode_cs_all_fight_info(B)};
decode(<<1005:?INT_PROTO_ID, B/binary>>) -> {ok, random_fight_pb:decode_sc_all_fight_info_responese(B)};
decode(<<1006:?INT_PROTO_ID, B/binary>>) -> {ok, random_fight_pb:decode_cs_random_fight_enter(B)};
decode(<<1007:?INT_PROTO_ID, B/binary>>) -> {ok, random_fight_pb:decode_sc_random_fight_enter_response(B)};
decode(<<1101:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_cs_pass_fight_query_request(B)};
decode(<<1102:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_sc_pass_fight_query_respone(B)};
decode(<<1103:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_cs_pass_fight_reset_request(B)};
decode(<<1104:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_sc_pass_fight_reset_respone(B)};
decode(<<1105:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_cs_pass_fight_dup_request(B)};
decode(<<1106:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_sc_pass_fight_dup_respone(B)};
decode(<<1107:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_cs_pass_fight_dup_cancel_request(B)};
decode(<<1108:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_sc_pass_fight_dup_reward(B)};
decode(<<1109:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_cs_pass_fight_fight_request(B)};
decode(<<1110:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_sc_pass_fight_fight_respone(B)};
decode(<<1111:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_sc_pass_fight_quit_stage(B)};
decode(<<1112:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_cs_pass_fight_open_chests_request(B)};
decode(<<1113:?INT_PROTO_ID, B/binary>>) -> {ok, pass_fight_pb:decode_sc_pass_fight_open_chests_respone(B)};
decode(<<1201:?INT_PROTO_ID, B/binary>>) -> {ok, welfare_fight_pb:decode_cs_welfare_fight_fight_request(B)};
decode(<<1202:?INT_PROTO_ID, B/binary>>) -> {ok, welfare_fight_pb:decode_sc_welfare_fight_fight_response(B)};
decode(<<1206:?INT_PROTO_ID, B/binary>>) -> {ok, welfare_fight_pb:decode_cs_welfare_fight_query_request(B)};
decode(<<1207:?INT_PROTO_ID, B/binary>>) -> {ok, welfare_fight_pb:decode_sc_welfare_fight_query_response(B)};
decode(<<1301:?INT_PROTO_ID, B/binary>>) -> {ok, pet_pb:decode_sc_pet_list(B)};
decode(<<1302:?INT_PROTO_ID, B/binary>>) -> {ok, pet_pb:decode_sc_pet_update(B)};
decode(<<1303:?INT_PROTO_ID, B/binary>>) -> {ok, pet_pb:decode_cs_pet_fight(B)};
decode(<<1304:?INT_PROTO_ID, B/binary>>) -> {ok, pet_pb:decode_sc_pet_fight(B)};
decode(<<1305:?INT_PROTO_ID, B/binary>>) -> {ok, pet_pb:decode_cs_pet_feed(B)};
decode(<<1306:?INT_PROTO_ID, B/binary>>) -> {ok, pet_pb:decode_sc_pet_feed(B)};
decode(<<1307:?INT_PROTO_ID, B/binary>>) -> {ok, pet_pb:decode_cs_pet_equip_inlay(B)};
decode(<<1308:?INT_PROTO_ID, B/binary>>) -> {ok, pet_pb:decode_sc_pet_equip_inlay(B)};
decode(<<1401:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_cs_shop_bonus_point_query(B)};
decode(<<1402:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_sc_shop_bonus_point_query_response(B)};
decode(<<1403:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_cs_shop_bonus_point_buy(B)};
decode(<<1404:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_sc_shop_bonus_point_buy_response(B)};
decode(<<1501:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_cs_shop_mystery_query(B)};
decode(<<1502:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_sc_shop_mystery_query_response(B)};
decode(<<1503:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_cs_shop_mystery_refresh(B)};
decode(<<1504:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_cs_shop_mystery_buy(B)};
decode(<<1505:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_sc_shop_mystery_buy_response(B)};
decode(<<1601:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_cs_shop_common_query(B)};
decode(<<1602:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_sc_shop_common_query_response(B)};
decode(<<1603:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_cs_shop_common_buy(B)};
decode(<<1604:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_sc_shop_common_buy_response(B)};
decode(<<1605:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_cs_shop_common_gift(B)};
decode(<<1606:?INT_PROTO_ID, B/binary>>) -> {ok, shop_pb:decode_cs_shop_common_gift_response(B)};
decode(<<1700:?INT_PROTO_ID, B/binary>>) -> {ok, mission_pb:decode_sc_mission_info(B)};
decode(<<1701:?INT_PROTO_ID, B/binary>>) -> {ok, mission_pb:decode_cs_mission_complete(B)};
decode(<<1702:?INT_PROTO_ID, B/binary>>) -> {ok, mission_pb:decode_sc_mission_complete_reply(B)};
decode(<<1703:?INT_PROTO_ID, B/binary>>) -> {ok, mission_pb:decode_cs_mission_get(B)};
decode(<<1802:?INT_PROTO_ID, B/binary>>) -> {ok, mail_pb:decode_sc_mail_list_query_respone(B)};
decode(<<1803:?INT_PROTO_ID, B/binary>>) -> {ok, mail_pb:decode_sc_mail_info_notice(B)};
decode(<<1804:?INT_PROTO_ID, B/binary>>) -> {ok, mail_pb:decode_cs_mail_get_reward(B)};
decode(<<1805:?INT_PROTO_ID, B/binary>>) -> {ok, mail_pb:decode_sc_mail_get_reward(B)};
decode(<<1806:?INT_PROTO_ID, B/binary>>) -> {ok, mail_pb:decode_cs_mail_lookup(B)};
decode(<<1807:?INT_PROTO_ID, B/binary>>) -> {ok, mail_pb:decode_sc_mail_lookup(B)};
decode(<<1809:?INT_PROTO_ID, B/binary>>) -> {ok, mail_pb:decode_cs_mail_all_get_reward(B)};
decode(<<1810:?INT_PROTO_ID, B/binary>>) -> {ok, mail_pb:decode_sc_mail_all_get_reward(B)};
decode(<<1901:?INT_PROTO_ID, B/binary>>) -> {ok, guild_war_pb:decode_sc_guild_war_door(B)};
decode(<<1903:?INT_PROTO_ID, B/binary>>) -> {ok, guild_war_pb:decode_cs_guild_war_enter(B)};
decode(<<1904:?INT_PROTO_ID, B/binary>>) -> {ok, guild_war_pb:decode_sc_guild_war_enter_response(B)};
decode(<<1905:?INT_PROTO_ID, B/binary>>) -> {ok, guild_war_pb:decode_sc_guild_war_billing(B)};
decode(<<1906:?INT_PROTO_ID, B/binary>>) -> {ok, guild_war_pb:decode_sc_guild_war_update_info(B)};
decode(<<2000:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_sc_guild_update(B)};
decode(<<2001:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_cs_guild_memeber_query(B)};
decode(<<2002:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_sc_guild_member_update(B)};
decode(<<2003:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_cs_guild_memeber_operation(B)};
decode(<<2004:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_cs_guild_list_query(B)};
decode(<<2005:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_sc_guild_list_update(B)};
decode(<<2006:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_cs_guild_search(B)};
decode(<<2007:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_sc_guild_search_response(B)};
decode(<<2008:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_cs_guild_create(B)};
decode(<<2009:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_cs_guild_quit(B)};
decode(<<2010:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_cs_guild_apply(B)};
decode(<<2011:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_sc_guild_apply_response(B)};
decode(<<2012:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_cs_guild_apply_onekey(B)};
decode(<<2013:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_sc_guild_apply_onekey_response(B)};
decode(<<2014:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_cs_guild_apply_reply(B)};
decode(<<2015:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_cs_guild_apply_list_query(B)};
decode(<<2016:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_sc_guild_apply_list_update(B)};
decode(<<2017:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_sc_guild_log_update(B)};
decode(<<2018:?INT_PROTO_ID, B/binary>>) -> {ok, guild_pb:decode_sc_guild_log_init(B)};
decode(<<2101:?INT_PROTO_ID, B/binary>>) -> {ok, ranking_pb:decode_cs_ranking_list_query_request(B)};
decode(<<2102:?INT_PROTO_ID, B/binary>>) -> {ok, ranking_pb:decode_sc_ranking_list_query_respone(B)};
decode(<<2103:?INT_PROTO_ID, B/binary>>) -> {ok, ranking_pb:decode_sc_ranking_update_notice(B)};
decode(<<2104:?INT_PROTO_ID, B/binary>>) -> {ok, ranking_pb:decode_sc_guid_ranking_response(B)};
decode(<<2201:?INT_PROTO_ID, B/binary>>) -> {ok, vip_level_pb:decode_sc_vip_info(B)};
decode(<<2202:?INT_PROTO_ID, B/binary>>) -> {ok, vip_level_pb:decode_sc_vip_times(B)};
decode(<<2203:?INT_PROTO_ID, B/binary>>) -> {ok, vip_level_pb:decode_cs_vip_buy_times(B)};
decode(<<2204:?INT_PROTO_ID, B/binary>>) -> {ok, vip_level_pb:decode_sc_vip_buy_times(B)};
decode(<<2205:?INT_PROTO_ID, B/binary>>) -> {ok, vip_level_pb:decode_cs_vip_use_bun(B)};
decode(<<2206:?INT_PROTO_ID, B/binary>>) -> {ok, vip_level_pb:decode_sc_vip_use_bun_result(B)};
decode(<<2207:?INT_PROTO_ID, B/binary>>) -> {ok, vip_level_pb:decode_cs_vip_buy_gold(B)};
decode(<<2208:?INT_PROTO_ID, B/binary>>) -> {ok, vip_level_pb:decode_sc_vip_buy_gold(B)};
decode(<<2209:?INT_PROTO_ID, B/binary>>) -> {ok, vip_level_pb:decode_sc_vip_recharge(B)};
decode(<<2301:?INT_PROTO_ID, B/binary>>) -> {ok, common_fight_pb:decode_cs_common_fight_kill_monster(B)};
decode(<<2302:?INT_PROTO_ID, B/binary>>) -> {ok, common_fight_pb:decode_cs_common_fight_dead(B)};
decode(<<2303:?INT_PROTO_ID, B/binary>>) -> {ok, common_fight_pb:decode_cs_common_fight_relive(B)};
decode(<<2304:?INT_PROTO_ID, B/binary>>) -> {ok, common_fight_pb:decode_sc_common_fight_relive_response(B)};
decode(<<2305:?INT_PROTO_ID, B/binary>>) -> {ok, common_fight_pb:decode_cs_common_fight_quit(B)};
decode(<<2306:?INT_PROTO_ID, B/binary>>) -> {ok, common_fight_pb:decode_sc_common_fight_quit_reponse(B)};
decode(<<2307:?INT_PROTO_ID, B/binary>>) -> {ok, common_fight_pb:decode_sc_first_fight_end(B)};
decode(<<2401:?INT_PROTO_ID, B/binary>>) -> {ok, master_fight_pb:decode_cs_master_fight_enter(B)};
decode(<<2402:?INT_PROTO_ID, B/binary>>) -> {ok, master_fight_pb:decode_sc_master_fight_enter_response(B)};
decode(<<2501:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_create(B)};
decode(<<2502:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_create_reply(B)};
decode(<<2503:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_quit(B)};
decode(<<2504:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_quit_reply(B)};
decode(<<2505:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_member_change(B)};
decode(<<2506:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_info(B)};
decode(<<2507:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_invite_agree(B)};
decode(<<2508:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_invite_agree_reply(B)};
decode(<<2509:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_invite_list(B)};
decode(<<2510:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_invite_list_reply(B)};
decode(<<2511:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_invite(B)};
decode(<<2512:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_invite_reply(B)};
decode(<<2513:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_invite_list_change(B)};
decode(<<2514:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_kick(B)};
decode(<<2515:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_kick_reply(B)};
decode(<<2516:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_be_kicked(B)};
decode(<<2517:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_leader_transfer(B)};
decode(<<2518:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_leader_transfer_reply(B)};
decode(<<2519:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_start_activity(B)};
decode(<<2520:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_start_activity_reply(B)};
decode(<<2521:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_activity(B)};
decode(<<2522:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_activity_agree(B)};
decode(<<2523:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_activity_agree_reply(B)};
decode(<<2524:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_ready_info(B)};
decode(<<2525:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_auto_match(B)};
decode(<<2526:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_auto_match(B)};
decode(<<2527:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_personal_auto_match(B)};
decode(<<2528:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_personal_auto_match(B)};
decode(<<2529:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_personal_auto_match_state(B)};
decode(<<2530:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_auto_match_team_list(B)};
decode(<<2531:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_auto_match_team_list(B)};
decode(<<2532:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_apply(B)};
decode(<<2533:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_apply(B)};
decode(<<2534:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_get_team_apply_list(B)};
decode(<<2535:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_sc_team_apply_list(B)};
decode(<<2536:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_clean_apply_list(B)};
decode(<<2537:?INT_PROTO_ID, B/binary>>) -> {ok, team_pb:decode_cs_team_apply_agree(B)};
decode(<<2601:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_activity_sign_info(B)};
decode(<<2602:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_cs_activity_sign(B)};
decode(<<2603:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_activity_sign_reply(B)};
decode(<<2604:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_activity_list(B)};
decode(<<2605:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_activity_energy_info(B)};
decode(<<2606:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_cs_activity_energy(B)};
decode(<<2607:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_activity_energy_reply(B)};
decode(<<2608:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_activity_fund_info(B)};
decode(<<2609:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_cs_activity_fund_buy(B)};
decode(<<2610:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_activity_fund_buy_reply(B)};
decode(<<2611:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_cs_activity_fund_award(B)};
decode(<<2612:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_activity_fund_award_reply(B)};
decode(<<2613:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_normal_activity_info(B)};
decode(<<2614:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_cs_normal_activity_award(B)};
decode(<<2615:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_normal_activity_award_reply(B)};
decode(<<2616:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_activity_vip_info(B)};
decode(<<2617:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_cs_activity_vip_buy(B)};
decode(<<2618:?INT_PROTO_ID, B/binary>>) -> {ok, activity_pb:decode_sc_activity_vip_buy_reply(B)};
decode(<<2701:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_cs_arena_info(B)};
decode(<<2702:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_sc_arena_info_reply(B)};
decode(<<2703:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_cs_arena_button(B)};
decode(<<2704:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_sc_arena_button_reply(B)};
decode(<<2705:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_cs_arena_challenge(B)};
decode(<<2706:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_sc_arena_challenge_reply(B)};
decode(<<2707:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_cs_arena_challenge_account(B)};
decode(<<2708:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_cs_arena_record(B)};
decode(<<2709:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_sc_arena_record_reply(B)};
decode(<<2710:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_cs_arena_times(B)};
decode(<<2711:?INT_PROTO_ID, B/binary>>) -> {ok, arena_pb:decode_sc_arena_times_reply(B)};
decode(_) -> error.
encode_msg_bin(#cs_login{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_cs_login(Msg))};
encode_msg_bin(#sc_login{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_sc_login(Msg))};
encode_msg_bin(#cs_login_reconnection{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_cs_login_reconnection(Msg))};
encode_msg_bin(#sc_login_reconnection{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_sc_login_reconnection(Msg))};
encode_msg_bin(#cs_login_logoff{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_cs_login_logoff(Msg))};
encode_msg_bin(#sc_login_repeat{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_sc_login_repeat(Msg))};
encode_msg_bin(#cs_login_heartbeat{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_cs_login_heartbeat(Msg))};
encode_msg_bin(#sc_login_heartbeat{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_sc_login_heartbeat(Msg))};
encode_msg_bin(#cs_login_proto_count{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_cs_login_proto_count(Msg))};
encode_msg_bin(#cs_login_proto_clean{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_cs_login_proto_clean(Msg))};
encode_msg_bin(#sc_login_proto_count{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_sc_login_proto_count(Msg))};
encode_msg_bin(#sc_login_proto_clean{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_sc_login_proto_clean(Msg))};
encode_msg_bin(#sc_login_role_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_sc_login_role_list(Msg))};
encode_msg_bin(#cs_login_role_list{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(login_pb:encode_cs_login_role_list(Msg))};
encode_msg_bin(#cs_login_role_choose{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(login_pb:encode_cs_login_role_choose(Msg))};
encode_msg_bin(#cs_login_role_create{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(login_pb:encode_cs_login_role_create(Msg))};
encode_msg_bin(#sc_login_role_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(login_pb:encode_sc_login_role_response(Msg))};
encode_msg_bin(#sc_player_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_info(Msg))};
encode_msg_bin(#sc_player_sys_notice{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_sys_notice(Msg))};
encode_msg_bin(#cs_player_info_modify{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(player_pb:encode_cs_player_info_modify(Msg))};
encode_msg_bin(#sc_player_info_modify{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_info_modify(Msg))};
encode_msg_bin(#cs_player_skill_upgrade{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_cs_player_skill_upgrade(Msg))};
encode_msg_bin(#sc_player_skill_upgrade{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_skill_upgrade(Msg))};
encode_msg_bin(#cs_player_dress_query{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_cs_player_dress_query(Msg))};
encode_msg_bin(#sc_player_dress_update{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_dress_update(Msg))};
encode_msg_bin(#cs_player_dress_use{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_cs_player_dress_use(Msg))};
encode_msg_bin(#sc_player_dress_use{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_dress_use(Msg))};
encode_msg_bin(#cs_player_title_query{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_cs_player_title_query(Msg))};
encode_msg_bin(#sc_player_title_update{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_title_update(Msg))};
encode_msg_bin(#cs_player_title_use{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_cs_player_title_use(Msg))};
encode_msg_bin(#sc_player_title_use{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_title_use(Msg))};
encode_msg_bin(#cs_player_detail_info_query{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(player_pb:encode_cs_player_detail_info_query(Msg))};
encode_msg_bin(#sc_player_detail_info_query{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_detail_info_query(Msg))};
encode_msg_bin(#cs_player_guide_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_cs_player_guide_info(Msg))};
encode_msg_bin(#sc_player_guide_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_guide_info(Msg))};
encode_msg_bin(#sc_player_skill_change{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_skill_change(Msg))};
encode_msg_bin(#cs_player_limit{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_cs_player_limit(Msg))};
encode_msg_bin(#sc_player_limit{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(player_pb:encode_sc_player_limit(Msg))};
encode_msg_bin(#cs_galaxy_upgrade{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(galaxy_pb:encode_cs_galaxy_upgrade(Msg))};
encode_msg_bin(#sc_galaxy_upgrade_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(galaxy_pb:encode_sc_galaxy_upgrade_reply(Msg))};
encode_msg_bin(#sc_galaxy_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(galaxy_pb:encode_sc_galaxy_info(Msg))};
encode_msg_bin(#sc_training_skill_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(skill_pb:encode_sc_training_skill_info(Msg))};
encode_msg_bin(#cs_training_skill_upgrade{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(skill_pb:encode_cs_training_skill_upgrade(Msg))};
encode_msg_bin(#sc_training_skill_upgrade_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(skill_pb:encode_sc_training_skill_upgrade_reply(Msg))};
encode_msg_bin(#cs_map_action{}=Msg) -> {ok, 1, 1, erlang:iolist_to_binary(map_pb:encode_cs_map_action(Msg))};
encode_msg_bin(#sc_map_action{}=Msg) -> {ok, 1, 1, erlang:iolist_to_binary(map_pb:encode_sc_map_action(Msg))};
encode_msg_bin(#sc_map_enter_scene{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(map_pb:encode_sc_map_enter_scene(Msg))};
encode_msg_bin(#cs_map_enter_scene{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(map_pb:encode_cs_map_enter_scene(Msg))};
encode_msg_bin(#cs_map_skill_hit{}=Msg) -> {ok, 1, 1, erlang:iolist_to_binary(map_pb:encode_cs_map_skill_hit(Msg))};
encode_msg_bin(#sc_map_skill_hit{}=Msg) -> {ok, 1, 1, erlang:iolist_to_binary(map_pb:encode_sc_map_skill_hit(Msg))};
encode_msg_bin(#cs_map_enter_city{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(map_pb:encode_cs_map_enter_city(Msg))};
encode_msg_bin(#cs_map_lua_run_time{}=Msg) -> {ok, 1, 1, erlang:iolist_to_binary(map_pb:encode_cs_map_lua_run_time(Msg))};
encode_msg_bin(#sc_map_lua_run_time{}=Msg) -> {ok, 1, 1, erlang:iolist_to_binary(map_pb:encode_sc_map_lua_run_time(Msg))};
encode_msg_bin(#sc_battle_info{}=Msg) -> {ok, 1, 1, erlang:iolist_to_binary(battle_pb:encode_sc_battle_info(Msg))};
encode_msg_bin(#sc_battle_state{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(battle_pb:encode_sc_battle_state(Msg))};
encode_msg_bin(#sc_battle_object_add{}=Msg) -> {ok, 1, 1, erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_add(Msg))};
encode_msg_bin(#sc_battle_object_remove{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_remove(Msg))};
encode_msg_bin(#sc_battle_object_stealth_add{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_stealth_add(Msg))};
encode_msg_bin(#sc_battle_object_stealth_remove{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_stealth_remove(Msg))};
encode_msg_bin(#sc_battle_camera_boss{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(battle_pb:encode_sc_battle_camera_boss(Msg))};
encode_msg_bin(#sc_battle_camera_normal{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(battle_pb:encode_sc_battle_camera_normal(Msg))};
encode_msg_bin(#sc_battle_object_ai_add{}=Msg) -> {ok, 0, 1, erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_ai_add(Msg))};
encode_msg_bin(#sc_battle_object_ai_remove{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(battle_pb:encode_sc_battle_object_ai_remove(Msg))};
encode_msg_bin(#sc_item_add{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_add(Msg))};
encode_msg_bin(#sc_item_update{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_update(Msg))};
encode_msg_bin(#sc_item_delete{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_delete(Msg))};
encode_msg_bin(#sc_item_init{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_init(Msg))};
encode_msg_bin(#cs_item_sort{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_sort(Msg))};
encode_msg_bin(#sc_item_equip_update{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_equip_update(Msg))};
encode_msg_bin(#cs_item_equip_take_on{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_equip_take_on(Msg))};
encode_msg_bin(#sc_item_equip_take_on{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_equip_take_on(Msg))};
encode_msg_bin(#cs_item_equip_take_off{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_equip_take_off(Msg))};
encode_msg_bin(#sc_item_equip_take_off{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_equip_take_off(Msg))};
encode_msg_bin(#cs_item_sale{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_sale(Msg))};
encode_msg_bin(#sc_item_sale{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_sale(Msg))};
encode_msg_bin(#cs_item_equip_upgrade{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_equip_upgrade(Msg))};
encode_msg_bin(#sc_item_equip_upgrade{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_equip_upgrade(Msg))};
encode_msg_bin(#cs_item_equip_strengthen{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_equip_strengthen(Msg))};
encode_msg_bin(#sc_item_equip_strengthen{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_equip_strengthen(Msg))};
encode_msg_bin(#cs_item_use{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_use(Msg))};
encode_msg_bin(#sc_item_use{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_use(Msg))};
encode_msg_bin(#cs_item_compose{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_compose(Msg))};
encode_msg_bin(#sc_item_compose{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_compose(Msg))};
encode_msg_bin(#cs_item_decompose{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_decompose(Msg))};
encode_msg_bin(#sc_item_decompose{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_decompose(Msg))};
encode_msg_bin(#cs_item_equip_gemstone_inlay{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_equip_gemstone_inlay(Msg))};
encode_msg_bin(#sc_item_equip_gemstone_inlay{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_equip_gemstone_inlay(Msg))};
encode_msg_bin(#cs_item_equip_polish{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_equip_polish(Msg))};
encode_msg_bin(#sc_item_equip_polish{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_equip_polish(Msg))};
encode_msg_bin(#cs_item_equip_inherit{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_equip_inherit(Msg))};
encode_msg_bin(#sc_item_equip_inherit{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_equip_inherit(Msg))};
encode_msg_bin(#sc_item_equip_resonate{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_equip_resonate(Msg))};
encode_msg_bin(#cs_item_gemstone_compose{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(item_pb:encode_cs_item_gemstone_compose(Msg))};
encode_msg_bin(#sc_item_gemstone_compose{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(item_pb:encode_sc_item_gemstone_compose(Msg))};
encode_msg_bin(#cs_chat{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(chat_pb:encode_cs_chat(Msg))};
encode_msg_bin(#sc_chat{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(chat_pb:encode_sc_chat(Msg))};
encode_msg_bin(#sc_chat_notice{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(chat_pb:encode_sc_chat_notice(Msg))};
encode_msg_bin(#cs_common_operation_verify{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_pb:encode_cs_common_operation_verify(Msg))};
encode_msg_bin(#sc_common_operation_verify{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_pb:encode_sc_common_operation_verify(Msg))};
encode_msg_bin(#sc_common_currency{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_pb:encode_sc_common_currency(Msg))};
encode_msg_bin(#sc_common_enercy_time{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_pb:encode_sc_common_enercy_time(Msg))};
encode_msg_bin(#sc_dup_fight_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(chapter_fight_pb:encode_sc_dup_fight_info(Msg))};
encode_msg_bin(#cs_chapter_fight_enter{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(chapter_fight_pb:encode_cs_chapter_fight_enter(Msg))};
encode_msg_bin(#sc_chapter_fight_enter_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(chapter_fight_pb:encode_sc_chapter_fight_enter_response(Msg))};
encode_msg_bin(#cs_dup_fight_push{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(chapter_fight_pb:encode_cs_dup_fight_push(Msg))};
encode_msg_bin(#sc_dup_fight_push{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(chapter_fight_pb:encode_sc_dup_fight_push(Msg))};
encode_msg_bin(#sc_chapter_fight_chest{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(chapter_fight_pb:encode_sc_chapter_fight_chest(Msg))};
encode_msg_bin(#cs_chapter_fight_open_chest{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(chapter_fight_pb:encode_cs_chapter_fight_open_chest(Msg))};
encode_msg_bin(#sc_chapter_fight_open_chest{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(chapter_fight_pb:encode_sc_chapter_fight_open_chest(Msg))};
encode_msg_bin(#sc_friend_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_sc_friend_list(Msg))};
encode_msg_bin(#sc_friend_add{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_sc_friend_add(Msg))};
encode_msg_bin(#sc_friend_del{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_sc_friend_del(Msg))};
encode_msg_bin(#cs_friend_add_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(friend_pb:encode_cs_friend_add_request(Msg))};
encode_msg_bin(#sc_friend_add_responese{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_sc_friend_add_responese(Msg))};
encode_msg_bin(#cs_friend_del_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(friend_pb:encode_cs_friend_del_request(Msg))};
encode_msg_bin(#sc_friend_del_responese{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_sc_friend_del_responese(Msg))};
encode_msg_bin(#cs_friend_add_black{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_cs_friend_add_black(Msg))};
encode_msg_bin(#cs_friend_remove_black{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_cs_friend_remove_black(Msg))};
encode_msg_bin(#cs_friend_apply_handle{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(friend_pb:encode_cs_friend_apply_handle(Msg))};
encode_msg_bin(#cs_friend_search_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(friend_pb:encode_cs_friend_search_request(Msg))};
encode_msg_bin(#sc_friend_search_respone{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_sc_friend_search_respone(Msg))};
encode_msg_bin(#cs_friend_recommond{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_cs_friend_recommond(Msg))};
encode_msg_bin(#cs_friend_give{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_cs_friend_give(Msg))};
encode_msg_bin(#cs_friend_receive{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_cs_friend_receive(Msg))};
encode_msg_bin(#sc_friend_give_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_sc_friend_give_list(Msg))};
encode_msg_bin(#sc_friend_receive_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(friend_pb:encode_sc_friend_receive_list(Msg))};
encode_msg_bin(#cs_random_fight_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(random_fight_pb:encode_cs_random_fight_info(Msg))};
encode_msg_bin(#sc_random_fight_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(random_fight_pb:encode_sc_random_fight_info(Msg))};
encode_msg_bin(#cs_random_fight_refresh{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(random_fight_pb:encode_cs_random_fight_refresh(Msg))};
encode_msg_bin(#cs_all_fight_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(random_fight_pb:encode_cs_all_fight_info(Msg))};
encode_msg_bin(#sc_all_fight_info_responese{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(random_fight_pb:encode_sc_all_fight_info_responese(Msg))};
encode_msg_bin(#cs_random_fight_enter{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(random_fight_pb:encode_cs_random_fight_enter(Msg))};
encode_msg_bin(#sc_random_fight_enter_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(random_fight_pb:encode_sc_random_fight_enter_response(Msg))};
encode_msg_bin(#cs_pass_fight_query_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_query_request(Msg))};
encode_msg_bin(#sc_pass_fight_query_respone{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_query_respone(Msg))};
encode_msg_bin(#cs_pass_fight_reset_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_reset_request(Msg))};
encode_msg_bin(#sc_pass_fight_reset_respone{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_reset_respone(Msg))};
encode_msg_bin(#cs_pass_fight_dup_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_dup_request(Msg))};
encode_msg_bin(#sc_pass_fight_dup_respone{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_dup_respone(Msg))};
encode_msg_bin(#cs_pass_fight_dup_cancel_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_dup_cancel_request(Msg))};
encode_msg_bin(#sc_pass_fight_dup_reward{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_dup_reward(Msg))};
encode_msg_bin(#cs_pass_fight_fight_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_fight_request(Msg))};
encode_msg_bin(#sc_pass_fight_fight_respone{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_fight_respone(Msg))};
encode_msg_bin(#sc_pass_fight_quit_stage{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_quit_stage(Msg))};
encode_msg_bin(#cs_pass_fight_open_chests_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(pass_fight_pb:encode_cs_pass_fight_open_chests_request(Msg))};
encode_msg_bin(#sc_pass_fight_open_chests_respone{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pass_fight_pb:encode_sc_pass_fight_open_chests_respone(Msg))};
encode_msg_bin(#cs_welfare_fight_fight_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(welfare_fight_pb:encode_cs_welfare_fight_fight_request(Msg))};
encode_msg_bin(#sc_welfare_fight_fight_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(welfare_fight_pb:encode_sc_welfare_fight_fight_response(Msg))};
encode_msg_bin(#cs_welfare_fight_query_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(welfare_fight_pb:encode_cs_welfare_fight_query_request(Msg))};
encode_msg_bin(#sc_welfare_fight_query_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(welfare_fight_pb:encode_sc_welfare_fight_query_response(Msg))};
encode_msg_bin(#sc_pet_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pet_pb:encode_sc_pet_list(Msg))};
encode_msg_bin(#sc_pet_update{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pet_pb:encode_sc_pet_update(Msg))};
encode_msg_bin(#cs_pet_fight{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(pet_pb:encode_cs_pet_fight(Msg))};
encode_msg_bin(#sc_pet_fight{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pet_pb:encode_sc_pet_fight(Msg))};
encode_msg_bin(#cs_pet_feed{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(pet_pb:encode_cs_pet_feed(Msg))};
encode_msg_bin(#sc_pet_feed{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pet_pb:encode_sc_pet_feed(Msg))};
encode_msg_bin(#cs_pet_equip_inlay{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pet_pb:encode_cs_pet_equip_inlay(Msg))};
encode_msg_bin(#sc_pet_equip_inlay{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(pet_pb:encode_sc_pet_equip_inlay(Msg))};
encode_msg_bin(#cs_shop_bonus_point_query{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_cs_shop_bonus_point_query(Msg))};
encode_msg_bin(#sc_shop_bonus_point_query_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_sc_shop_bonus_point_query_response(Msg))};
encode_msg_bin(#cs_shop_bonus_point_buy{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(shop_pb:encode_cs_shop_bonus_point_buy(Msg))};
encode_msg_bin(#sc_shop_bonus_point_buy_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_sc_shop_bonus_point_buy_response(Msg))};
encode_msg_bin(#cs_shop_mystery_query{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_cs_shop_mystery_query(Msg))};
encode_msg_bin(#sc_shop_mystery_query_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_sc_shop_mystery_query_response(Msg))};
encode_msg_bin(#cs_shop_mystery_refresh{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_cs_shop_mystery_refresh(Msg))};
encode_msg_bin(#cs_shop_mystery_buy{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(shop_pb:encode_cs_shop_mystery_buy(Msg))};
encode_msg_bin(#sc_shop_mystery_buy_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_sc_shop_mystery_buy_response(Msg))};
encode_msg_bin(#cs_shop_common_query{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_cs_shop_common_query(Msg))};
encode_msg_bin(#sc_shop_common_query_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_sc_shop_common_query_response(Msg))};
encode_msg_bin(#cs_shop_common_buy{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(shop_pb:encode_cs_shop_common_buy(Msg))};
encode_msg_bin(#sc_shop_common_buy_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_sc_shop_common_buy_response(Msg))};
encode_msg_bin(#cs_shop_common_gift{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_cs_shop_common_gift(Msg))};
encode_msg_bin(#cs_shop_common_gift_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(shop_pb:encode_cs_shop_common_gift_response(Msg))};
encode_msg_bin(#sc_mission_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mission_pb:encode_sc_mission_info(Msg))};
encode_msg_bin(#cs_mission_complete{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mission_pb:encode_cs_mission_complete(Msg))};
encode_msg_bin(#sc_mission_complete_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mission_pb:encode_sc_mission_complete_reply(Msg))};
encode_msg_bin(#cs_mission_get{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mission_pb:encode_cs_mission_get(Msg))};
encode_msg_bin(#sc_mail_list_query_respone{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mail_pb:encode_sc_mail_list_query_respone(Msg))};
encode_msg_bin(#sc_mail_info_notice{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mail_pb:encode_sc_mail_info_notice(Msg))};
encode_msg_bin(#cs_mail_get_reward{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mail_pb:encode_cs_mail_get_reward(Msg))};
encode_msg_bin(#sc_mail_get_reward{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mail_pb:encode_sc_mail_get_reward(Msg))};
encode_msg_bin(#cs_mail_lookup{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mail_pb:encode_cs_mail_lookup(Msg))};
encode_msg_bin(#sc_mail_lookup{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mail_pb:encode_sc_mail_lookup(Msg))};
encode_msg_bin(#cs_mail_all_get_reward{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mail_pb:encode_cs_mail_all_get_reward(Msg))};
encode_msg_bin(#sc_mail_all_get_reward{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(mail_pb:encode_sc_mail_all_get_reward(Msg))};
encode_msg_bin(#sc_guild_war_door{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_war_pb:encode_sc_guild_war_door(Msg))};
encode_msg_bin(#cs_guild_war_enter{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_war_pb:encode_cs_guild_war_enter(Msg))};
encode_msg_bin(#sc_guild_war_enter_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_war_pb:encode_sc_guild_war_enter_response(Msg))};
encode_msg_bin(#sc_guild_war_billing{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_war_pb:encode_sc_guild_war_billing(Msg))};
encode_msg_bin(#sc_guild_war_update_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_war_pb:encode_sc_guild_war_update_info(Msg))};
encode_msg_bin(#sc_guild_update{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_sc_guild_update(Msg))};
encode_msg_bin(#cs_guild_memeber_query{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_cs_guild_memeber_query(Msg))};
encode_msg_bin(#sc_guild_member_update{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_sc_guild_member_update(Msg))};
encode_msg_bin(#cs_guild_memeber_operation{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_cs_guild_memeber_operation(Msg))};
encode_msg_bin(#cs_guild_list_query{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_cs_guild_list_query(Msg))};
encode_msg_bin(#sc_guild_list_update{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_sc_guild_list_update(Msg))};
encode_msg_bin(#cs_guild_search{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(guild_pb:encode_cs_guild_search(Msg))};
encode_msg_bin(#sc_guild_search_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_sc_guild_search_response(Msg))};
encode_msg_bin(#cs_guild_create{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(guild_pb:encode_cs_guild_create(Msg))};
encode_msg_bin(#cs_guild_quit{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(guild_pb:encode_cs_guild_quit(Msg))};
encode_msg_bin(#cs_guild_apply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_cs_guild_apply(Msg))};
encode_msg_bin(#sc_guild_apply_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_sc_guild_apply_response(Msg))};
encode_msg_bin(#cs_guild_apply_onekey{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_cs_guild_apply_onekey(Msg))};
encode_msg_bin(#sc_guild_apply_onekey_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_sc_guild_apply_onekey_response(Msg))};
encode_msg_bin(#cs_guild_apply_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_cs_guild_apply_reply(Msg))};
encode_msg_bin(#cs_guild_apply_list_query{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_cs_guild_apply_list_query(Msg))};
encode_msg_bin(#sc_guild_apply_list_update{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_sc_guild_apply_list_update(Msg))};
encode_msg_bin(#sc_guild_log_update{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_sc_guild_log_update(Msg))};
encode_msg_bin(#sc_guild_log_init{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(guild_pb:encode_sc_guild_log_init(Msg))};
encode_msg_bin(#cs_ranking_list_query_request{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(ranking_pb:encode_cs_ranking_list_query_request(Msg))};
encode_msg_bin(#sc_ranking_list_query_respone{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(ranking_pb:encode_sc_ranking_list_query_respone(Msg))};
encode_msg_bin(#sc_ranking_update_notice{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(ranking_pb:encode_sc_ranking_update_notice(Msg))};
encode_msg_bin(#sc_guid_ranking_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(ranking_pb:encode_sc_guid_ranking_response(Msg))};
encode_msg_bin(#sc_vip_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_info(Msg))};
encode_msg_bin(#sc_vip_times{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_times(Msg))};
encode_msg_bin(#cs_vip_buy_times{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(vip_level_pb:encode_cs_vip_buy_times(Msg))};
encode_msg_bin(#sc_vip_buy_times{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_buy_times(Msg))};
encode_msg_bin(#cs_vip_use_bun{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(vip_level_pb:encode_cs_vip_use_bun(Msg))};
encode_msg_bin(#sc_vip_use_bun_result{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_use_bun_result(Msg))};
encode_msg_bin(#cs_vip_buy_gold{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(vip_level_pb:encode_cs_vip_buy_gold(Msg))};
encode_msg_bin(#sc_vip_buy_gold{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_buy_gold(Msg))};
encode_msg_bin(#sc_vip_recharge{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(vip_level_pb:encode_sc_vip_recharge(Msg))};
encode_msg_bin(#cs_common_fight_kill_monster{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_fight_pb:encode_cs_common_fight_kill_monster(Msg))};
encode_msg_bin(#cs_common_fight_dead{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_fight_pb:encode_cs_common_fight_dead(Msg))};
encode_msg_bin(#cs_common_fight_relive{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_fight_pb:encode_cs_common_fight_relive(Msg))};
encode_msg_bin(#sc_common_fight_relive_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_fight_pb:encode_sc_common_fight_relive_response(Msg))};
encode_msg_bin(#cs_common_fight_quit{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_fight_pb:encode_cs_common_fight_quit(Msg))};
encode_msg_bin(#sc_common_fight_quit_reponse{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_fight_pb:encode_sc_common_fight_quit_reponse(Msg))};
encode_msg_bin(#sc_first_fight_end{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(common_fight_pb:encode_sc_first_fight_end(Msg))};
encode_msg_bin(#cs_master_fight_enter{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(master_fight_pb:encode_cs_master_fight_enter(Msg))};
encode_msg_bin(#sc_master_fight_enter_response{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(master_fight_pb:encode_sc_master_fight_enter_response(Msg))};
encode_msg_bin(#cs_team_create{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_create(Msg))};
encode_msg_bin(#sc_team_create_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_create_reply(Msg))};
encode_msg_bin(#cs_team_quit{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_quit(Msg))};
encode_msg_bin(#sc_team_quit_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_quit_reply(Msg))};
encode_msg_bin(#sc_team_member_change{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_member_change(Msg))};
encode_msg_bin(#sc_team_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_info(Msg))};
encode_msg_bin(#cs_team_invite_agree{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_invite_agree(Msg))};
encode_msg_bin(#sc_team_invite_agree_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_invite_agree_reply(Msg))};
encode_msg_bin(#cs_team_invite_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_invite_list(Msg))};
encode_msg_bin(#sc_team_invite_list_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_invite_list_reply(Msg))};
encode_msg_bin(#cs_team_invite{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_invite(Msg))};
encode_msg_bin(#sc_team_invite_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_invite_reply(Msg))};
encode_msg_bin(#sc_team_invite_list_change{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_invite_list_change(Msg))};
encode_msg_bin(#cs_team_kick{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_kick(Msg))};
encode_msg_bin(#sc_team_kick_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_kick_reply(Msg))};
encode_msg_bin(#sc_team_be_kicked{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_be_kicked(Msg))};
encode_msg_bin(#cs_team_leader_transfer{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_leader_transfer(Msg))};
encode_msg_bin(#sc_team_leader_transfer_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_leader_transfer_reply(Msg))};
encode_msg_bin(#cs_team_start_activity{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_start_activity(Msg))};
encode_msg_bin(#sc_team_start_activity_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_start_activity_reply(Msg))};
encode_msg_bin(#sc_team_activity{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_activity(Msg))};
encode_msg_bin(#cs_team_activity_agree{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_activity_agree(Msg))};
encode_msg_bin(#sc_team_activity_agree_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_activity_agree_reply(Msg))};
encode_msg_bin(#sc_team_ready_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_ready_info(Msg))};
encode_msg_bin(#cs_team_auto_match{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_auto_match(Msg))};
encode_msg_bin(#sc_team_auto_match{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_auto_match(Msg))};
encode_msg_bin(#cs_personal_auto_match{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_personal_auto_match(Msg))};
encode_msg_bin(#sc_personal_auto_match{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_personal_auto_match(Msg))};
encode_msg_bin(#sc_personal_auto_match_state{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_personal_auto_match_state(Msg))};
encode_msg_bin(#cs_auto_match_team_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_auto_match_team_list(Msg))};
encode_msg_bin(#sc_auto_match_team_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_auto_match_team_list(Msg))};
encode_msg_bin(#cs_team_apply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_apply(Msg))};
encode_msg_bin(#sc_team_apply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_apply(Msg))};
encode_msg_bin(#cs_get_team_apply_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_get_team_apply_list(Msg))};
encode_msg_bin(#sc_team_apply_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_sc_team_apply_list(Msg))};
encode_msg_bin(#cs_clean_apply_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_clean_apply_list(Msg))};
encode_msg_bin(#cs_team_apply_agree{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(team_pb:encode_cs_team_apply_agree(Msg))};
encode_msg_bin(#sc_activity_sign_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_activity_sign_info(Msg))};
encode_msg_bin(#cs_activity_sign{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_cs_activity_sign(Msg))};
encode_msg_bin(#sc_activity_sign_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_activity_sign_reply(Msg))};
encode_msg_bin(#sc_activity_list{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_activity_list(Msg))};
encode_msg_bin(#sc_activity_energy_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_activity_energy_info(Msg))};
encode_msg_bin(#cs_activity_energy{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_cs_activity_energy(Msg))};
encode_msg_bin(#sc_activity_energy_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_activity_energy_reply(Msg))};
encode_msg_bin(#sc_activity_fund_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_activity_fund_info(Msg))};
encode_msg_bin(#cs_activity_fund_buy{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(activity_pb:encode_cs_activity_fund_buy(Msg))};
encode_msg_bin(#sc_activity_fund_buy_reply{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(activity_pb:encode_sc_activity_fund_buy_reply(Msg))};
encode_msg_bin(#cs_activity_fund_award{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_cs_activity_fund_award(Msg))};
encode_msg_bin(#sc_activity_fund_award_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_activity_fund_award_reply(Msg))};
encode_msg_bin(#sc_normal_activity_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_normal_activity_info(Msg))};
encode_msg_bin(#cs_normal_activity_award{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_cs_normal_activity_award(Msg))};
encode_msg_bin(#sc_normal_activity_award_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_normal_activity_award_reply(Msg))};
encode_msg_bin(#sc_activity_vip_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_activity_vip_info(Msg))};
encode_msg_bin(#cs_activity_vip_buy{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_cs_activity_vip_buy(Msg))};
encode_msg_bin(#sc_activity_vip_buy_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(activity_pb:encode_sc_activity_vip_buy_reply(Msg))};
encode_msg_bin(#cs_arena_info{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(arena_pb:encode_cs_arena_info(Msg))};
encode_msg_bin(#sc_arena_info_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(arena_pb:encode_sc_arena_info_reply(Msg))};
encode_msg_bin(#cs_arena_button{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(arena_pb:encode_cs_arena_button(Msg))};
encode_msg_bin(#sc_arena_button_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(arena_pb:encode_sc_arena_button_reply(Msg))};
encode_msg_bin(#cs_arena_challenge{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(arena_pb:encode_cs_arena_challenge(Msg))};
encode_msg_bin(#sc_arena_challenge_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(arena_pb:encode_sc_arena_challenge_reply(Msg))};
encode_msg_bin(#cs_arena_challenge_account{}=Msg) -> {ok, 1, 0, erlang:iolist_to_binary(arena_pb:encode_cs_arena_challenge_account(Msg))};
encode_msg_bin(#cs_arena_record{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(arena_pb:encode_cs_arena_record(Msg))};
encode_msg_bin(#sc_arena_record_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(arena_pb:encode_sc_arena_record_reply(Msg))};
encode_msg_bin(#cs_arena_times{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(arena_pb:encode_cs_arena_times(Msg))};
encode_msg_bin(#sc_arena_times_reply{}=Msg) -> {ok, 0, 0, erlang:iolist_to_binary(arena_pb:encode_sc_arena_times_reply(Msg))};
encode_msg_bin(_) -> error.
merge_bin(#cs_login{}=_Msg, MsgBin) -> {ok, <<1:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_login{}=_Msg, MsgBin) -> {ok, <<2:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_login_reconnection{}=_Msg, MsgBin) -> {ok, <<3:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_login_reconnection{}=_Msg, MsgBin) -> {ok, <<4:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_login_logoff{}=_Msg, MsgBin) -> {ok, <<5:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_login_repeat{}=_Msg, MsgBin) -> {ok, <<6:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_login_heartbeat{}=_Msg, MsgBin) -> {ok, <<7:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_login_heartbeat{}=_Msg, MsgBin) -> {ok, <<8:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_login_proto_count{}=_Msg, MsgBin) -> {ok, <<9:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_login_proto_clean{}=_Msg, MsgBin) -> {ok, <<10:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_login_proto_count{}=_Msg, MsgBin) -> {ok, <<11:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_login_proto_clean{}=_Msg, MsgBin) -> {ok, <<12:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_login_role_list{}=_Msg, MsgBin) -> {ok, <<13:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_login_role_list{}=_Msg, MsgBin) -> {ok, <<14:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_login_role_choose{}=_Msg, MsgBin) -> {ok, <<15:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_login_role_create{}=_Msg, MsgBin) -> {ok, <<16:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_login_role_response{}=_Msg, MsgBin) -> {ok, <<17:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_info{}=_Msg, MsgBin) -> {ok, <<101:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_sys_notice{}=_Msg, MsgBin) -> {ok, <<102:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_player_info_modify{}=_Msg, MsgBin) -> {ok, <<103:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_info_modify{}=_Msg, MsgBin) -> {ok, <<104:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_player_skill_upgrade{}=_Msg, MsgBin) -> {ok, <<105:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_skill_upgrade{}=_Msg, MsgBin) -> {ok, <<106:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_player_dress_query{}=_Msg, MsgBin) -> {ok, <<107:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_dress_update{}=_Msg, MsgBin) -> {ok, <<108:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_player_dress_use{}=_Msg, MsgBin) -> {ok, <<109:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_dress_use{}=_Msg, MsgBin) -> {ok, <<110:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_player_title_query{}=_Msg, MsgBin) -> {ok, <<111:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_title_update{}=_Msg, MsgBin) -> {ok, <<112:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_player_title_use{}=_Msg, MsgBin) -> {ok, <<113:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_title_use{}=_Msg, MsgBin) -> {ok, <<114:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_player_detail_info_query{}=_Msg, MsgBin) -> {ok, <<115:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_detail_info_query{}=_Msg, MsgBin) -> {ok, <<116:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_player_guide_info{}=_Msg, MsgBin) -> {ok, <<117:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_guide_info{}=_Msg, MsgBin) -> {ok, <<118:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_skill_change{}=_Msg, MsgBin) -> {ok, <<119:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_player_limit{}=_Msg, MsgBin) -> {ok, <<120:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_player_limit{}=_Msg, MsgBin) -> {ok, <<121:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_galaxy_upgrade{}=_Msg, MsgBin) -> {ok, <<150:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_galaxy_upgrade_reply{}=_Msg, MsgBin) -> {ok, <<151:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_galaxy_info{}=_Msg, MsgBin) -> {ok, <<152:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_training_skill_info{}=_Msg, MsgBin) -> {ok, <<160:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_training_skill_upgrade{}=_Msg, MsgBin) -> {ok, <<161:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_training_skill_upgrade_reply{}=_Msg, MsgBin) -> {ok, <<162:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_map_action{}=_Msg, MsgBin) -> {ok, <<200:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_map_action{}=_Msg, MsgBin) -> {ok, <<201:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_map_enter_scene{}=_Msg, MsgBin) -> {ok, <<202:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_map_enter_scene{}=_Msg, MsgBin) -> {ok, <<203:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_map_skill_hit{}=_Msg, MsgBin) -> {ok, <<205:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_map_skill_hit{}=_Msg, MsgBin) -> {ok, <<206:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_map_enter_city{}=_Msg, MsgBin) -> {ok, <<207:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_map_lua_run_time{}=_Msg, MsgBin) -> {ok, <<208:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_map_lua_run_time{}=_Msg, MsgBin) -> {ok, <<209:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_battle_info{}=_Msg, MsgBin) -> {ok, <<301:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_battle_state{}=_Msg, MsgBin) -> {ok, <<302:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_battle_object_add{}=_Msg, MsgBin) -> {ok, <<303:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_battle_object_remove{}=_Msg, MsgBin) -> {ok, <<304:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_battle_object_stealth_add{}=_Msg, MsgBin) -> {ok, <<305:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_battle_object_stealth_remove{}=_Msg, MsgBin) -> {ok, <<306:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_battle_camera_boss{}=_Msg, MsgBin) -> {ok, <<307:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_battle_camera_normal{}=_Msg, MsgBin) -> {ok, <<308:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_battle_object_ai_add{}=_Msg, MsgBin) -> {ok, <<309:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_battle_object_ai_remove{}=_Msg, MsgBin) -> {ok, <<310:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_add{}=_Msg, MsgBin) -> {ok, <<501:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_update{}=_Msg, MsgBin) -> {ok, <<502:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_delete{}=_Msg, MsgBin) -> {ok, <<503:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_init{}=_Msg, MsgBin) -> {ok, <<504:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_sort{}=_Msg, MsgBin) -> {ok, <<505:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_equip_update{}=_Msg, MsgBin) -> {ok, <<506:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_equip_take_on{}=_Msg, MsgBin) -> {ok, <<507:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_equip_take_on{}=_Msg, MsgBin) -> {ok, <<508:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_equip_take_off{}=_Msg, MsgBin) -> {ok, <<509:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_equip_take_off{}=_Msg, MsgBin) -> {ok, <<510:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_sale{}=_Msg, MsgBin) -> {ok, <<511:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_sale{}=_Msg, MsgBin) -> {ok, <<512:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_equip_upgrade{}=_Msg, MsgBin) -> {ok, <<513:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_equip_upgrade{}=_Msg, MsgBin) -> {ok, <<514:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_equip_strengthen{}=_Msg, MsgBin) -> {ok, <<515:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_equip_strengthen{}=_Msg, MsgBin) -> {ok, <<516:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_use{}=_Msg, MsgBin) -> {ok, <<517:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_use{}=_Msg, MsgBin) -> {ok, <<518:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_compose{}=_Msg, MsgBin) -> {ok, <<519:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_compose{}=_Msg, MsgBin) -> {ok, <<520:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_decompose{}=_Msg, MsgBin) -> {ok, <<521:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_decompose{}=_Msg, MsgBin) -> {ok, <<522:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_equip_gemstone_inlay{}=_Msg, MsgBin) -> {ok, <<523:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_equip_gemstone_inlay{}=_Msg, MsgBin) -> {ok, <<524:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_equip_polish{}=_Msg, MsgBin) -> {ok, <<525:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_equip_polish{}=_Msg, MsgBin) -> {ok, <<526:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_equip_inherit{}=_Msg, MsgBin) -> {ok, <<527:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_equip_inherit{}=_Msg, MsgBin) -> {ok, <<528:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_equip_resonate{}=_Msg, MsgBin) -> {ok, <<530:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_item_gemstone_compose{}=_Msg, MsgBin) -> {ok, <<531:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_item_gemstone_compose{}=_Msg, MsgBin) -> {ok, <<532:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_chat{}=_Msg, MsgBin) -> {ok, <<601:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_chat{}=_Msg, MsgBin) -> {ok, <<602:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_chat_notice{}=_Msg, MsgBin) -> {ok, <<603:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_common_operation_verify{}=_Msg, MsgBin) -> {ok, <<701:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_common_operation_verify{}=_Msg, MsgBin) -> {ok, <<702:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_common_currency{}=_Msg, MsgBin) -> {ok, <<704:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_common_enercy_time{}=_Msg, MsgBin) -> {ok, <<705:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_dup_fight_info{}=_Msg, MsgBin) -> {ok, <<801:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_chapter_fight_enter{}=_Msg, MsgBin) -> {ok, <<802:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_chapter_fight_enter_response{}=_Msg, MsgBin) -> {ok, <<803:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_dup_fight_push{}=_Msg, MsgBin) -> {ok, <<804:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_dup_fight_push{}=_Msg, MsgBin) -> {ok, <<805:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_chapter_fight_chest{}=_Msg, MsgBin) -> {ok, <<806:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_chapter_fight_open_chest{}=_Msg, MsgBin) -> {ok, <<807:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_chapter_fight_open_chest{}=_Msg, MsgBin) -> {ok, <<808:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_friend_list{}=_Msg, MsgBin) -> {ok, <<901:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_friend_add{}=_Msg, MsgBin) -> {ok, <<902:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_friend_del{}=_Msg, MsgBin) -> {ok, <<903:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_friend_add_request{}=_Msg, MsgBin) -> {ok, <<904:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_friend_add_responese{}=_Msg, MsgBin) -> {ok, <<905:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_friend_del_request{}=_Msg, MsgBin) -> {ok, <<906:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_friend_del_responese{}=_Msg, MsgBin) -> {ok, <<907:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_friend_add_black{}=_Msg, MsgBin) -> {ok, <<908:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_friend_remove_black{}=_Msg, MsgBin) -> {ok, <<909:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_friend_apply_handle{}=_Msg, MsgBin) -> {ok, <<910:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_friend_search_request{}=_Msg, MsgBin) -> {ok, <<911:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_friend_search_respone{}=_Msg, MsgBin) -> {ok, <<912:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_friend_recommond{}=_Msg, MsgBin) -> {ok, <<913:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_friend_give{}=_Msg, MsgBin) -> {ok, <<914:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_friend_receive{}=_Msg, MsgBin) -> {ok, <<915:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_friend_give_list{}=_Msg, MsgBin) -> {ok, <<916:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_friend_receive_list{}=_Msg, MsgBin) -> {ok, <<917:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_random_fight_info{}=_Msg, MsgBin) -> {ok, <<1001:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_random_fight_info{}=_Msg, MsgBin) -> {ok, <<1002:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_random_fight_refresh{}=_Msg, MsgBin) -> {ok, <<1003:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_all_fight_info{}=_Msg, MsgBin) -> {ok, <<1004:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_all_fight_info_responese{}=_Msg, MsgBin) -> {ok, <<1005:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_random_fight_enter{}=_Msg, MsgBin) -> {ok, <<1006:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_random_fight_enter_response{}=_Msg, MsgBin) -> {ok, <<1007:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_pass_fight_query_request{}=_Msg, MsgBin) -> {ok, <<1101:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pass_fight_query_respone{}=_Msg, MsgBin) -> {ok, <<1102:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_pass_fight_reset_request{}=_Msg, MsgBin) -> {ok, <<1103:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pass_fight_reset_respone{}=_Msg, MsgBin) -> {ok, <<1104:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_pass_fight_dup_request{}=_Msg, MsgBin) -> {ok, <<1105:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pass_fight_dup_respone{}=_Msg, MsgBin) -> {ok, <<1106:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_pass_fight_dup_cancel_request{}=_Msg, MsgBin) -> {ok, <<1107:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pass_fight_dup_reward{}=_Msg, MsgBin) -> {ok, <<1108:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_pass_fight_fight_request{}=_Msg, MsgBin) -> {ok, <<1109:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pass_fight_fight_respone{}=_Msg, MsgBin) -> {ok, <<1110:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pass_fight_quit_stage{}=_Msg, MsgBin) -> {ok, <<1111:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_pass_fight_open_chests_request{}=_Msg, MsgBin) -> {ok, <<1112:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pass_fight_open_chests_respone{}=_Msg, MsgBin) -> {ok, <<1113:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_welfare_fight_fight_request{}=_Msg, MsgBin) -> {ok, <<1201:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_welfare_fight_fight_response{}=_Msg, MsgBin) -> {ok, <<1202:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_welfare_fight_query_request{}=_Msg, MsgBin) -> {ok, <<1206:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_welfare_fight_query_response{}=_Msg, MsgBin) -> {ok, <<1207:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pet_list{}=_Msg, MsgBin) -> {ok, <<1301:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pet_update{}=_Msg, MsgBin) -> {ok, <<1302:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_pet_fight{}=_Msg, MsgBin) -> {ok, <<1303:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pet_fight{}=_Msg, MsgBin) -> {ok, <<1304:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_pet_feed{}=_Msg, MsgBin) -> {ok, <<1305:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pet_feed{}=_Msg, MsgBin) -> {ok, <<1306:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_pet_equip_inlay{}=_Msg, MsgBin) -> {ok, <<1307:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_pet_equip_inlay{}=_Msg, MsgBin) -> {ok, <<1308:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_shop_bonus_point_query{}=_Msg, MsgBin) -> {ok, <<1401:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_shop_bonus_point_query_response{}=_Msg, MsgBin) -> {ok, <<1402:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_shop_bonus_point_buy{}=_Msg, MsgBin) -> {ok, <<1403:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_shop_bonus_point_buy_response{}=_Msg, MsgBin) -> {ok, <<1404:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_shop_mystery_query{}=_Msg, MsgBin) -> {ok, <<1501:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_shop_mystery_query_response{}=_Msg, MsgBin) -> {ok, <<1502:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_shop_mystery_refresh{}=_Msg, MsgBin) -> {ok, <<1503:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_shop_mystery_buy{}=_Msg, MsgBin) -> {ok, <<1504:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_shop_mystery_buy_response{}=_Msg, MsgBin) -> {ok, <<1505:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_shop_common_query{}=_Msg, MsgBin) -> {ok, <<1601:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_shop_common_query_response{}=_Msg, MsgBin) -> {ok, <<1602:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_shop_common_buy{}=_Msg, MsgBin) -> {ok, <<1603:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_shop_common_buy_response{}=_Msg, MsgBin) -> {ok, <<1604:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_shop_common_gift{}=_Msg, MsgBin) -> {ok, <<1605:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_shop_common_gift_response{}=_Msg, MsgBin) -> {ok, <<1606:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_mission_info{}=_Msg, MsgBin) -> {ok, <<1700:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_mission_complete{}=_Msg, MsgBin) -> {ok, <<1701:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_mission_complete_reply{}=_Msg, MsgBin) -> {ok, <<1702:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_mission_get{}=_Msg, MsgBin) -> {ok, <<1703:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_mail_list_query_respone{}=_Msg, MsgBin) -> {ok, <<1802:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_mail_info_notice{}=_Msg, MsgBin) -> {ok, <<1803:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_mail_get_reward{}=_Msg, MsgBin) -> {ok, <<1804:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_mail_get_reward{}=_Msg, MsgBin) -> {ok, <<1805:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_mail_lookup{}=_Msg, MsgBin) -> {ok, <<1806:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_mail_lookup{}=_Msg, MsgBin) -> {ok, <<1807:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_mail_all_get_reward{}=_Msg, MsgBin) -> {ok, <<1809:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_mail_all_get_reward{}=_Msg, MsgBin) -> {ok, <<1810:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_war_door{}=_Msg, MsgBin) -> {ok, <<1901:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_war_enter{}=_Msg, MsgBin) -> {ok, <<1903:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_war_enter_response{}=_Msg, MsgBin) -> {ok, <<1904:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_war_billing{}=_Msg, MsgBin) -> {ok, <<1905:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_war_update_info{}=_Msg, MsgBin) -> {ok, <<1906:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_update{}=_Msg, MsgBin) -> {ok, <<2000:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_memeber_query{}=_Msg, MsgBin) -> {ok, <<2001:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_member_update{}=_Msg, MsgBin) -> {ok, <<2002:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_memeber_operation{}=_Msg, MsgBin) -> {ok, <<2003:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_list_query{}=_Msg, MsgBin) -> {ok, <<2004:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_list_update{}=_Msg, MsgBin) -> {ok, <<2005:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_search{}=_Msg, MsgBin) -> {ok, <<2006:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_search_response{}=_Msg, MsgBin) -> {ok, <<2007:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_create{}=_Msg, MsgBin) -> {ok, <<2008:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_quit{}=_Msg, MsgBin) -> {ok, <<2009:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_apply{}=_Msg, MsgBin) -> {ok, <<2010:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_apply_response{}=_Msg, MsgBin) -> {ok, <<2011:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_apply_onekey{}=_Msg, MsgBin) -> {ok, <<2012:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_apply_onekey_response{}=_Msg, MsgBin) -> {ok, <<2013:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_apply_reply{}=_Msg, MsgBin) -> {ok, <<2014:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_guild_apply_list_query{}=_Msg, MsgBin) -> {ok, <<2015:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_apply_list_update{}=_Msg, MsgBin) -> {ok, <<2016:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_log_update{}=_Msg, MsgBin) -> {ok, <<2017:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guild_log_init{}=_Msg, MsgBin) -> {ok, <<2018:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_ranking_list_query_request{}=_Msg, MsgBin) -> {ok, <<2101:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_ranking_list_query_respone{}=_Msg, MsgBin) -> {ok, <<2102:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_ranking_update_notice{}=_Msg, MsgBin) -> {ok, <<2103:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_guid_ranking_response{}=_Msg, MsgBin) -> {ok, <<2104:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_vip_info{}=_Msg, MsgBin) -> {ok, <<2201:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_vip_times{}=_Msg, MsgBin) -> {ok, <<2202:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_vip_buy_times{}=_Msg, MsgBin) -> {ok, <<2203:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_vip_buy_times{}=_Msg, MsgBin) -> {ok, <<2204:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_vip_use_bun{}=_Msg, MsgBin) -> {ok, <<2205:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_vip_use_bun_result{}=_Msg, MsgBin) -> {ok, <<2206:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_vip_buy_gold{}=_Msg, MsgBin) -> {ok, <<2207:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_vip_buy_gold{}=_Msg, MsgBin) -> {ok, <<2208:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_vip_recharge{}=_Msg, MsgBin) -> {ok, <<2209:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_common_fight_kill_monster{}=_Msg, MsgBin) -> {ok, <<2301:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_common_fight_dead{}=_Msg, MsgBin) -> {ok, <<2302:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_common_fight_relive{}=_Msg, MsgBin) -> {ok, <<2303:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_common_fight_relive_response{}=_Msg, MsgBin) -> {ok, <<2304:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_common_fight_quit{}=_Msg, MsgBin) -> {ok, <<2305:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_common_fight_quit_reponse{}=_Msg, MsgBin) -> {ok, <<2306:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_first_fight_end{}=_Msg, MsgBin) -> {ok, <<2307:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_master_fight_enter{}=_Msg, MsgBin) -> {ok, <<2401:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_master_fight_enter_response{}=_Msg, MsgBin) -> {ok, <<2402:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_create{}=_Msg, MsgBin) -> {ok, <<2501:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_create_reply{}=_Msg, MsgBin) -> {ok, <<2502:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_quit{}=_Msg, MsgBin) -> {ok, <<2503:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_quit_reply{}=_Msg, MsgBin) -> {ok, <<2504:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_member_change{}=_Msg, MsgBin) -> {ok, <<2505:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_info{}=_Msg, MsgBin) -> {ok, <<2506:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_invite_agree{}=_Msg, MsgBin) -> {ok, <<2507:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_invite_agree_reply{}=_Msg, MsgBin) -> {ok, <<2508:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_invite_list{}=_Msg, MsgBin) -> {ok, <<2509:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_invite_list_reply{}=_Msg, MsgBin) -> {ok, <<2510:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_invite{}=_Msg, MsgBin) -> {ok, <<2511:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_invite_reply{}=_Msg, MsgBin) -> {ok, <<2512:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_invite_list_change{}=_Msg, MsgBin) -> {ok, <<2513:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_kick{}=_Msg, MsgBin) -> {ok, <<2514:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_kick_reply{}=_Msg, MsgBin) -> {ok, <<2515:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_be_kicked{}=_Msg, MsgBin) -> {ok, <<2516:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_leader_transfer{}=_Msg, MsgBin) -> {ok, <<2517:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_leader_transfer_reply{}=_Msg, MsgBin) -> {ok, <<2518:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_start_activity{}=_Msg, MsgBin) -> {ok, <<2519:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_start_activity_reply{}=_Msg, MsgBin) -> {ok, <<2520:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_activity{}=_Msg, MsgBin) -> {ok, <<2521:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_activity_agree{}=_Msg, MsgBin) -> {ok, <<2522:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_activity_agree_reply{}=_Msg, MsgBin) -> {ok, <<2523:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_ready_info{}=_Msg, MsgBin) -> {ok, <<2524:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_auto_match{}=_Msg, MsgBin) -> {ok, <<2525:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_auto_match{}=_Msg, MsgBin) -> {ok, <<2526:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_personal_auto_match{}=_Msg, MsgBin) -> {ok, <<2527:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_personal_auto_match{}=_Msg, MsgBin) -> {ok, <<2528:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_personal_auto_match_state{}=_Msg, MsgBin) -> {ok, <<2529:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_auto_match_team_list{}=_Msg, MsgBin) -> {ok, <<2530:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_auto_match_team_list{}=_Msg, MsgBin) -> {ok, <<2531:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_apply{}=_Msg, MsgBin) -> {ok, <<2532:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_apply{}=_Msg, MsgBin) -> {ok, <<2533:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_get_team_apply_list{}=_Msg, MsgBin) -> {ok, <<2534:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_team_apply_list{}=_Msg, MsgBin) -> {ok, <<2535:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_clean_apply_list{}=_Msg, MsgBin) -> {ok, <<2536:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_team_apply_agree{}=_Msg, MsgBin) -> {ok, <<2537:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_activity_sign_info{}=_Msg, MsgBin) -> {ok, <<2601:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_activity_sign{}=_Msg, MsgBin) -> {ok, <<2602:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_activity_sign_reply{}=_Msg, MsgBin) -> {ok, <<2603:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_activity_list{}=_Msg, MsgBin) -> {ok, <<2604:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_activity_energy_info{}=_Msg, MsgBin) -> {ok, <<2605:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_activity_energy{}=_Msg, MsgBin) -> {ok, <<2606:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_activity_energy_reply{}=_Msg, MsgBin) -> {ok, <<2607:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_activity_fund_info{}=_Msg, MsgBin) -> {ok, <<2608:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_activity_fund_buy{}=_Msg, MsgBin) -> {ok, <<2609:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_activity_fund_buy_reply{}=_Msg, MsgBin) -> {ok, <<2610:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_activity_fund_award{}=_Msg, MsgBin) -> {ok, <<2611:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_activity_fund_award_reply{}=_Msg, MsgBin) -> {ok, <<2612:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_normal_activity_info{}=_Msg, MsgBin) -> {ok, <<2613:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_normal_activity_award{}=_Msg, MsgBin) -> {ok, <<2614:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_normal_activity_award_reply{}=_Msg, MsgBin) -> {ok, <<2615:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_activity_vip_info{}=_Msg, MsgBin) -> {ok, <<2616:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_activity_vip_buy{}=_Msg, MsgBin) -> {ok, <<2617:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_activity_vip_buy_reply{}=_Msg, MsgBin) -> {ok, <<2618:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_arena_info{}=_Msg, MsgBin) -> {ok, <<2701:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_arena_info_reply{}=_Msg, MsgBin) -> {ok, <<2702:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_arena_button{}=_Msg, MsgBin) -> {ok, <<2703:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_arena_button_reply{}=_Msg, MsgBin) -> {ok, <<2704:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_arena_challenge{}=_Msg, MsgBin) -> {ok, <<2705:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_arena_challenge_reply{}=_Msg, MsgBin) -> {ok, <<2706:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_arena_challenge_account{}=_Msg, MsgBin) -> {ok, <<2707:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_arena_record{}=_Msg, MsgBin) -> {ok, <<2708:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_arena_record_reply{}=_Msg, MsgBin) -> {ok, <<2709:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#cs_arena_times{}=_Msg, MsgBin) -> {ok, <<2710:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(#sc_arena_times_reply{}=_Msg, MsgBin) -> {ok, <<2711:?INT_PROTO_ID, MsgBin/binary>>};
merge_bin(_, _) -> error.
decode_msg_bin(1, MsgBin) -> {ok, login_pb:decode_cs_login(MsgBin)};
decode_msg_bin(2, MsgBin) -> {ok, login_pb:decode_sc_login(MsgBin)};
decode_msg_bin(3, MsgBin) -> {ok, login_pb:decode_cs_login_reconnection(MsgBin)};
decode_msg_bin(4, MsgBin) -> {ok, login_pb:decode_sc_login_reconnection(MsgBin)};
decode_msg_bin(5, MsgBin) -> {ok, login_pb:decode_cs_login_logoff(MsgBin)};
decode_msg_bin(6, MsgBin) -> {ok, login_pb:decode_sc_login_repeat(MsgBin)};
decode_msg_bin(7, MsgBin) -> {ok, login_pb:decode_cs_login_heartbeat(MsgBin)};
decode_msg_bin(8, MsgBin) -> {ok, login_pb:decode_sc_login_heartbeat(MsgBin)};
decode_msg_bin(9, MsgBin) -> {ok, login_pb:decode_cs_login_proto_count(MsgBin)};
decode_msg_bin(10, MsgBin) -> {ok, login_pb:decode_cs_login_proto_clean(MsgBin)};
decode_msg_bin(11, MsgBin) -> {ok, login_pb:decode_sc_login_proto_count(MsgBin)};
decode_msg_bin(12, MsgBin) -> {ok, login_pb:decode_sc_login_proto_clean(MsgBin)};
decode_msg_bin(13, MsgBin) -> {ok, login_pb:decode_sc_login_role_list(MsgBin)};
decode_msg_bin(14, MsgBin) -> {ok, login_pb:decode_cs_login_role_list(MsgBin)};
decode_msg_bin(15, MsgBin) -> {ok, login_pb:decode_cs_login_role_choose(MsgBin)};
decode_msg_bin(16, MsgBin) -> {ok, login_pb:decode_cs_login_role_create(MsgBin)};
decode_msg_bin(17, MsgBin) -> {ok, login_pb:decode_sc_login_role_response(MsgBin)};
decode_msg_bin(101, MsgBin) -> {ok, player_pb:decode_sc_player_info(MsgBin)};
decode_msg_bin(102, MsgBin) -> {ok, player_pb:decode_sc_player_sys_notice(MsgBin)};
decode_msg_bin(103, MsgBin) -> {ok, player_pb:decode_cs_player_info_modify(MsgBin)};
decode_msg_bin(104, MsgBin) -> {ok, player_pb:decode_sc_player_info_modify(MsgBin)};
decode_msg_bin(105, MsgBin) -> {ok, player_pb:decode_cs_player_skill_upgrade(MsgBin)};
decode_msg_bin(106, MsgBin) -> {ok, player_pb:decode_sc_player_skill_upgrade(MsgBin)};
decode_msg_bin(107, MsgBin) -> {ok, player_pb:decode_cs_player_dress_query(MsgBin)};
decode_msg_bin(108, MsgBin) -> {ok, player_pb:decode_sc_player_dress_update(MsgBin)};
decode_msg_bin(109, MsgBin) -> {ok, player_pb:decode_cs_player_dress_use(MsgBin)};
decode_msg_bin(110, MsgBin) -> {ok, player_pb:decode_sc_player_dress_use(MsgBin)};
decode_msg_bin(111, MsgBin) -> {ok, player_pb:decode_cs_player_title_query(MsgBin)};
decode_msg_bin(112, MsgBin) -> {ok, player_pb:decode_sc_player_title_update(MsgBin)};
decode_msg_bin(113, MsgBin) -> {ok, player_pb:decode_cs_player_title_use(MsgBin)};
decode_msg_bin(114, MsgBin) -> {ok, player_pb:decode_sc_player_title_use(MsgBin)};
decode_msg_bin(115, MsgBin) -> {ok, player_pb:decode_cs_player_detail_info_query(MsgBin)};
decode_msg_bin(116, MsgBin) -> {ok, player_pb:decode_sc_player_detail_info_query(MsgBin)};
decode_msg_bin(117, MsgBin) -> {ok, player_pb:decode_cs_player_guide_info(MsgBin)};
decode_msg_bin(118, MsgBin) -> {ok, player_pb:decode_sc_player_guide_info(MsgBin)};
decode_msg_bin(119, MsgBin) -> {ok, player_pb:decode_sc_player_skill_change(MsgBin)};
decode_msg_bin(120, MsgBin) -> {ok, player_pb:decode_cs_player_limit(MsgBin)};
decode_msg_bin(121, MsgBin) -> {ok, player_pb:decode_sc_player_limit(MsgBin)};
decode_msg_bin(150, MsgBin) -> {ok, galaxy_pb:decode_cs_galaxy_upgrade(MsgBin)};
decode_msg_bin(151, MsgBin) -> {ok, galaxy_pb:decode_sc_galaxy_upgrade_reply(MsgBin)};
decode_msg_bin(152, MsgBin) -> {ok, galaxy_pb:decode_sc_galaxy_info(MsgBin)};
decode_msg_bin(160, MsgBin) -> {ok, skill_pb:decode_sc_training_skill_info(MsgBin)};
decode_msg_bin(161, MsgBin) -> {ok, skill_pb:decode_cs_training_skill_upgrade(MsgBin)};
decode_msg_bin(162, MsgBin) -> {ok, skill_pb:decode_sc_training_skill_upgrade_reply(MsgBin)};
decode_msg_bin(200, MsgBin) -> {ok, map_pb:decode_cs_map_action(MsgBin)};
decode_msg_bin(201, MsgBin) -> {ok, map_pb:decode_sc_map_action(MsgBin)};
decode_msg_bin(202, MsgBin) -> {ok, map_pb:decode_sc_map_enter_scene(MsgBin)};
decode_msg_bin(203, MsgBin) -> {ok, map_pb:decode_cs_map_enter_scene(MsgBin)};
decode_msg_bin(205, MsgBin) -> {ok, map_pb:decode_cs_map_skill_hit(MsgBin)};
decode_msg_bin(206, MsgBin) -> {ok, map_pb:decode_sc_map_skill_hit(MsgBin)};
decode_msg_bin(207, MsgBin) -> {ok, map_pb:decode_cs_map_enter_city(MsgBin)};
decode_msg_bin(208, MsgBin) -> {ok, map_pb:decode_cs_map_lua_run_time(MsgBin)};
decode_msg_bin(209, MsgBin) -> {ok, map_pb:decode_sc_map_lua_run_time(MsgBin)};
decode_msg_bin(301, MsgBin) -> {ok, battle_pb:decode_sc_battle_info(MsgBin)};
decode_msg_bin(302, MsgBin) -> {ok, battle_pb:decode_sc_battle_state(MsgBin)};
decode_msg_bin(303, MsgBin) -> {ok, battle_pb:decode_sc_battle_object_add(MsgBin)};
decode_msg_bin(304, MsgBin) -> {ok, battle_pb:decode_sc_battle_object_remove(MsgBin)};
decode_msg_bin(305, MsgBin) -> {ok, battle_pb:decode_sc_battle_object_stealth_add(MsgBin)};
decode_msg_bin(306, MsgBin) -> {ok, battle_pb:decode_sc_battle_object_stealth_remove(MsgBin)};
decode_msg_bin(307, MsgBin) -> {ok, battle_pb:decode_sc_battle_camera_boss(MsgBin)};
decode_msg_bin(308, MsgBin) -> {ok, battle_pb:decode_sc_battle_camera_normal(MsgBin)};
decode_msg_bin(309, MsgBin) -> {ok, battle_pb:decode_sc_battle_object_ai_add(MsgBin)};
decode_msg_bin(310, MsgBin) -> {ok, battle_pb:decode_sc_battle_object_ai_remove(MsgBin)};
decode_msg_bin(501, MsgBin) -> {ok, item_pb:decode_sc_item_add(MsgBin)};
decode_msg_bin(502, MsgBin) -> {ok, item_pb:decode_sc_item_update(MsgBin)};
decode_msg_bin(503, MsgBin) -> {ok, item_pb:decode_sc_item_delete(MsgBin)};
decode_msg_bin(504, MsgBin) -> {ok, item_pb:decode_sc_item_init(MsgBin)};
decode_msg_bin(505, MsgBin) -> {ok, item_pb:decode_cs_item_sort(MsgBin)};
decode_msg_bin(506, MsgBin) -> {ok, item_pb:decode_sc_item_equip_update(MsgBin)};
decode_msg_bin(507, MsgBin) -> {ok, item_pb:decode_cs_item_equip_take_on(MsgBin)};
decode_msg_bin(508, MsgBin) -> {ok, item_pb:decode_sc_item_equip_take_on(MsgBin)};
decode_msg_bin(509, MsgBin) -> {ok, item_pb:decode_cs_item_equip_take_off(MsgBin)};
decode_msg_bin(510, MsgBin) -> {ok, item_pb:decode_sc_item_equip_take_off(MsgBin)};
decode_msg_bin(511, MsgBin) -> {ok, item_pb:decode_cs_item_sale(MsgBin)};
decode_msg_bin(512, MsgBin) -> {ok, item_pb:decode_sc_item_sale(MsgBin)};
decode_msg_bin(513, MsgBin) -> {ok, item_pb:decode_cs_item_equip_upgrade(MsgBin)};
decode_msg_bin(514, MsgBin) -> {ok, item_pb:decode_sc_item_equip_upgrade(MsgBin)};
decode_msg_bin(515, MsgBin) -> {ok, item_pb:decode_cs_item_equip_strengthen(MsgBin)};
decode_msg_bin(516, MsgBin) -> {ok, item_pb:decode_sc_item_equip_strengthen(MsgBin)};
decode_msg_bin(517, MsgBin) -> {ok, item_pb:decode_cs_item_use(MsgBin)};
decode_msg_bin(518, MsgBin) -> {ok, item_pb:decode_sc_item_use(MsgBin)};
decode_msg_bin(519, MsgBin) -> {ok, item_pb:decode_cs_item_compose(MsgBin)};
decode_msg_bin(520, MsgBin) -> {ok, item_pb:decode_sc_item_compose(MsgBin)};
decode_msg_bin(521, MsgBin) -> {ok, item_pb:decode_cs_item_decompose(MsgBin)};
decode_msg_bin(522, MsgBin) -> {ok, item_pb:decode_sc_item_decompose(MsgBin)};
decode_msg_bin(523, MsgBin) -> {ok, item_pb:decode_cs_item_equip_gemstone_inlay(MsgBin)};
decode_msg_bin(524, MsgBin) -> {ok, item_pb:decode_sc_item_equip_gemstone_inlay(MsgBin)};
decode_msg_bin(525, MsgBin) -> {ok, item_pb:decode_cs_item_equip_polish(MsgBin)};
decode_msg_bin(526, MsgBin) -> {ok, item_pb:decode_sc_item_equip_polish(MsgBin)};
decode_msg_bin(527, MsgBin) -> {ok, item_pb:decode_cs_item_equip_inherit(MsgBin)};
decode_msg_bin(528, MsgBin) -> {ok, item_pb:decode_sc_item_equip_inherit(MsgBin)};
decode_msg_bin(530, MsgBin) -> {ok, item_pb:decode_sc_item_equip_resonate(MsgBin)};
decode_msg_bin(531, MsgBin) -> {ok, item_pb:decode_cs_item_gemstone_compose(MsgBin)};
decode_msg_bin(532, MsgBin) -> {ok, item_pb:decode_sc_item_gemstone_compose(MsgBin)};
decode_msg_bin(601, MsgBin) -> {ok, chat_pb:decode_cs_chat(MsgBin)};
decode_msg_bin(602, MsgBin) -> {ok, chat_pb:decode_sc_chat(MsgBin)};
decode_msg_bin(603, MsgBin) -> {ok, chat_pb:decode_sc_chat_notice(MsgBin)};
decode_msg_bin(701, MsgBin) -> {ok, common_pb:decode_cs_common_operation_verify(MsgBin)};
decode_msg_bin(702, MsgBin) -> {ok, common_pb:decode_sc_common_operation_verify(MsgBin)};
decode_msg_bin(704, MsgBin) -> {ok, common_pb:decode_sc_common_currency(MsgBin)};
decode_msg_bin(705, MsgBin) -> {ok, common_pb:decode_sc_common_enercy_time(MsgBin)};
decode_msg_bin(801, MsgBin) -> {ok, chapter_fight_pb:decode_sc_dup_fight_info(MsgBin)};
decode_msg_bin(802, MsgBin) -> {ok, chapter_fight_pb:decode_cs_chapter_fight_enter(MsgBin)};
decode_msg_bin(803, MsgBin) -> {ok, chapter_fight_pb:decode_sc_chapter_fight_enter_response(MsgBin)};
decode_msg_bin(804, MsgBin) -> {ok, chapter_fight_pb:decode_cs_dup_fight_push(MsgBin)};
decode_msg_bin(805, MsgBin) -> {ok, chapter_fight_pb:decode_sc_dup_fight_push(MsgBin)};
decode_msg_bin(806, MsgBin) -> {ok, chapter_fight_pb:decode_sc_chapter_fight_chest(MsgBin)};
decode_msg_bin(807, MsgBin) -> {ok, chapter_fight_pb:decode_cs_chapter_fight_open_chest(MsgBin)};
decode_msg_bin(808, MsgBin) -> {ok, chapter_fight_pb:decode_sc_chapter_fight_open_chest(MsgBin)};
decode_msg_bin(901, MsgBin) -> {ok, friend_pb:decode_sc_friend_list(MsgBin)};
decode_msg_bin(902, MsgBin) -> {ok, friend_pb:decode_sc_friend_add(MsgBin)};
decode_msg_bin(903, MsgBin) -> {ok, friend_pb:decode_sc_friend_del(MsgBin)};
decode_msg_bin(904, MsgBin) -> {ok, friend_pb:decode_cs_friend_add_request(MsgBin)};
decode_msg_bin(905, MsgBin) -> {ok, friend_pb:decode_sc_friend_add_responese(MsgBin)};
decode_msg_bin(906, MsgBin) -> {ok, friend_pb:decode_cs_friend_del_request(MsgBin)};
decode_msg_bin(907, MsgBin) -> {ok, friend_pb:decode_sc_friend_del_responese(MsgBin)};
decode_msg_bin(908, MsgBin) -> {ok, friend_pb:decode_cs_friend_add_black(MsgBin)};
decode_msg_bin(909, MsgBin) -> {ok, friend_pb:decode_cs_friend_remove_black(MsgBin)};
decode_msg_bin(910, MsgBin) -> {ok, friend_pb:decode_cs_friend_apply_handle(MsgBin)};
decode_msg_bin(911, MsgBin) -> {ok, friend_pb:decode_cs_friend_search_request(MsgBin)};
decode_msg_bin(912, MsgBin) -> {ok, friend_pb:decode_sc_friend_search_respone(MsgBin)};
decode_msg_bin(913, MsgBin) -> {ok, friend_pb:decode_cs_friend_recommond(MsgBin)};
decode_msg_bin(914, MsgBin) -> {ok, friend_pb:decode_cs_friend_give(MsgBin)};
decode_msg_bin(915, MsgBin) -> {ok, friend_pb:decode_cs_friend_receive(MsgBin)};
decode_msg_bin(916, MsgBin) -> {ok, friend_pb:decode_sc_friend_give_list(MsgBin)};
decode_msg_bin(917, MsgBin) -> {ok, friend_pb:decode_sc_friend_receive_list(MsgBin)};
decode_msg_bin(1001, MsgBin) -> {ok, random_fight_pb:decode_cs_random_fight_info(MsgBin)};
decode_msg_bin(1002, MsgBin) -> {ok, random_fight_pb:decode_sc_random_fight_info(MsgBin)};
decode_msg_bin(1003, MsgBin) -> {ok, random_fight_pb:decode_cs_random_fight_refresh(MsgBin)};
decode_msg_bin(1004, MsgBin) -> {ok, random_fight_pb:decode_cs_all_fight_info(MsgBin)};
decode_msg_bin(1005, MsgBin) -> {ok, random_fight_pb:decode_sc_all_fight_info_responese(MsgBin)};
decode_msg_bin(1006, MsgBin) -> {ok, random_fight_pb:decode_cs_random_fight_enter(MsgBin)};
decode_msg_bin(1007, MsgBin) -> {ok, random_fight_pb:decode_sc_random_fight_enter_response(MsgBin)};
decode_msg_bin(1101, MsgBin) -> {ok, pass_fight_pb:decode_cs_pass_fight_query_request(MsgBin)};
decode_msg_bin(1102, MsgBin) -> {ok, pass_fight_pb:decode_sc_pass_fight_query_respone(MsgBin)};
decode_msg_bin(1103, MsgBin) -> {ok, pass_fight_pb:decode_cs_pass_fight_reset_request(MsgBin)};
decode_msg_bin(1104, MsgBin) -> {ok, pass_fight_pb:decode_sc_pass_fight_reset_respone(MsgBin)};
decode_msg_bin(1105, MsgBin) -> {ok, pass_fight_pb:decode_cs_pass_fight_dup_request(MsgBin)};
decode_msg_bin(1106, MsgBin) -> {ok, pass_fight_pb:decode_sc_pass_fight_dup_respone(MsgBin)};
decode_msg_bin(1107, MsgBin) -> {ok, pass_fight_pb:decode_cs_pass_fight_dup_cancel_request(MsgBin)};
decode_msg_bin(1108, MsgBin) -> {ok, pass_fight_pb:decode_sc_pass_fight_dup_reward(MsgBin)};
decode_msg_bin(1109, MsgBin) -> {ok, pass_fight_pb:decode_cs_pass_fight_fight_request(MsgBin)};
decode_msg_bin(1110, MsgBin) -> {ok, pass_fight_pb:decode_sc_pass_fight_fight_respone(MsgBin)};
decode_msg_bin(1111, MsgBin) -> {ok, pass_fight_pb:decode_sc_pass_fight_quit_stage(MsgBin)};
decode_msg_bin(1112, MsgBin) -> {ok, pass_fight_pb:decode_cs_pass_fight_open_chests_request(MsgBin)};
decode_msg_bin(1113, MsgBin) -> {ok, pass_fight_pb:decode_sc_pass_fight_open_chests_respone(MsgBin)};
decode_msg_bin(1201, MsgBin) -> {ok, welfare_fight_pb:decode_cs_welfare_fight_fight_request(MsgBin)};
decode_msg_bin(1202, MsgBin) -> {ok, welfare_fight_pb:decode_sc_welfare_fight_fight_response(MsgBin)};
decode_msg_bin(1206, MsgBin) -> {ok, welfare_fight_pb:decode_cs_welfare_fight_query_request(MsgBin)};
decode_msg_bin(1207, MsgBin) -> {ok, welfare_fight_pb:decode_sc_welfare_fight_query_response(MsgBin)};
decode_msg_bin(1301, MsgBin) -> {ok, pet_pb:decode_sc_pet_list(MsgBin)};
decode_msg_bin(1302, MsgBin) -> {ok, pet_pb:decode_sc_pet_update(MsgBin)};
decode_msg_bin(1303, MsgBin) -> {ok, pet_pb:decode_cs_pet_fight(MsgBin)};
decode_msg_bin(1304, MsgBin) -> {ok, pet_pb:decode_sc_pet_fight(MsgBin)};
decode_msg_bin(1305, MsgBin) -> {ok, pet_pb:decode_cs_pet_feed(MsgBin)};
decode_msg_bin(1306, MsgBin) -> {ok, pet_pb:decode_sc_pet_feed(MsgBin)};
decode_msg_bin(1307, MsgBin) -> {ok, pet_pb:decode_cs_pet_equip_inlay(MsgBin)};
decode_msg_bin(1308, MsgBin) -> {ok, pet_pb:decode_sc_pet_equip_inlay(MsgBin)};
decode_msg_bin(1401, MsgBin) -> {ok, shop_pb:decode_cs_shop_bonus_point_query(MsgBin)};
decode_msg_bin(1402, MsgBin) -> {ok, shop_pb:decode_sc_shop_bonus_point_query_response(MsgBin)};
decode_msg_bin(1403, MsgBin) -> {ok, shop_pb:decode_cs_shop_bonus_point_buy(MsgBin)};
decode_msg_bin(1404, MsgBin) -> {ok, shop_pb:decode_sc_shop_bonus_point_buy_response(MsgBin)};
decode_msg_bin(1501, MsgBin) -> {ok, shop_pb:decode_cs_shop_mystery_query(MsgBin)};
decode_msg_bin(1502, MsgBin) -> {ok, shop_pb:decode_sc_shop_mystery_query_response(MsgBin)};
decode_msg_bin(1503, MsgBin) -> {ok, shop_pb:decode_cs_shop_mystery_refresh(MsgBin)};
decode_msg_bin(1504, MsgBin) -> {ok, shop_pb:decode_cs_shop_mystery_buy(MsgBin)};
decode_msg_bin(1505, MsgBin) -> {ok, shop_pb:decode_sc_shop_mystery_buy_response(MsgBin)};
decode_msg_bin(1601, MsgBin) -> {ok, shop_pb:decode_cs_shop_common_query(MsgBin)};
decode_msg_bin(1602, MsgBin) -> {ok, shop_pb:decode_sc_shop_common_query_response(MsgBin)};
decode_msg_bin(1603, MsgBin) -> {ok, shop_pb:decode_cs_shop_common_buy(MsgBin)};
decode_msg_bin(1604, MsgBin) -> {ok, shop_pb:decode_sc_shop_common_buy_response(MsgBin)};
decode_msg_bin(1605, MsgBin) -> {ok, shop_pb:decode_cs_shop_common_gift(MsgBin)};
decode_msg_bin(1606, MsgBin) -> {ok, shop_pb:decode_cs_shop_common_gift_response(MsgBin)};
decode_msg_bin(1700, MsgBin) -> {ok, mission_pb:decode_sc_mission_info(MsgBin)};
decode_msg_bin(1701, MsgBin) -> {ok, mission_pb:decode_cs_mission_complete(MsgBin)};
decode_msg_bin(1702, MsgBin) -> {ok, mission_pb:decode_sc_mission_complete_reply(MsgBin)};
decode_msg_bin(1703, MsgBin) -> {ok, mission_pb:decode_cs_mission_get(MsgBin)};
decode_msg_bin(1802, MsgBin) -> {ok, mail_pb:decode_sc_mail_list_query_respone(MsgBin)};
decode_msg_bin(1803, MsgBin) -> {ok, mail_pb:decode_sc_mail_info_notice(MsgBin)};
decode_msg_bin(1804, MsgBin) -> {ok, mail_pb:decode_cs_mail_get_reward(MsgBin)};
decode_msg_bin(1805, MsgBin) -> {ok, mail_pb:decode_sc_mail_get_reward(MsgBin)};
decode_msg_bin(1806, MsgBin) -> {ok, mail_pb:decode_cs_mail_lookup(MsgBin)};
decode_msg_bin(1807, MsgBin) -> {ok, mail_pb:decode_sc_mail_lookup(MsgBin)};
decode_msg_bin(1809, MsgBin) -> {ok, mail_pb:decode_cs_mail_all_get_reward(MsgBin)};
decode_msg_bin(1810, MsgBin) -> {ok, mail_pb:decode_sc_mail_all_get_reward(MsgBin)};
decode_msg_bin(1901, MsgBin) -> {ok, guild_war_pb:decode_sc_guild_war_door(MsgBin)};
decode_msg_bin(1903, MsgBin) -> {ok, guild_war_pb:decode_cs_guild_war_enter(MsgBin)};
decode_msg_bin(1904, MsgBin) -> {ok, guild_war_pb:decode_sc_guild_war_enter_response(MsgBin)};
decode_msg_bin(1905, MsgBin) -> {ok, guild_war_pb:decode_sc_guild_war_billing(MsgBin)};
decode_msg_bin(1906, MsgBin) -> {ok, guild_war_pb:decode_sc_guild_war_update_info(MsgBin)};
decode_msg_bin(2000, MsgBin) -> {ok, guild_pb:decode_sc_guild_update(MsgBin)};
decode_msg_bin(2001, MsgBin) -> {ok, guild_pb:decode_cs_guild_memeber_query(MsgBin)};
decode_msg_bin(2002, MsgBin) -> {ok, guild_pb:decode_sc_guild_member_update(MsgBin)};
decode_msg_bin(2003, MsgBin) -> {ok, guild_pb:decode_cs_guild_memeber_operation(MsgBin)};
decode_msg_bin(2004, MsgBin) -> {ok, guild_pb:decode_cs_guild_list_query(MsgBin)};
decode_msg_bin(2005, MsgBin) -> {ok, guild_pb:decode_sc_guild_list_update(MsgBin)};
decode_msg_bin(2006, MsgBin) -> {ok, guild_pb:decode_cs_guild_search(MsgBin)};
decode_msg_bin(2007, MsgBin) -> {ok, guild_pb:decode_sc_guild_search_response(MsgBin)};
decode_msg_bin(2008, MsgBin) -> {ok, guild_pb:decode_cs_guild_create(MsgBin)};
decode_msg_bin(2009, MsgBin) -> {ok, guild_pb:decode_cs_guild_quit(MsgBin)};
decode_msg_bin(2010, MsgBin) -> {ok, guild_pb:decode_cs_guild_apply(MsgBin)};
decode_msg_bin(2011, MsgBin) -> {ok, guild_pb:decode_sc_guild_apply_response(MsgBin)};
decode_msg_bin(2012, MsgBin) -> {ok, guild_pb:decode_cs_guild_apply_onekey(MsgBin)};
decode_msg_bin(2013, MsgBin) -> {ok, guild_pb:decode_sc_guild_apply_onekey_response(MsgBin)};
decode_msg_bin(2014, MsgBin) -> {ok, guild_pb:decode_cs_guild_apply_reply(MsgBin)};
decode_msg_bin(2015, MsgBin) -> {ok, guild_pb:decode_cs_guild_apply_list_query(MsgBin)};
decode_msg_bin(2016, MsgBin) -> {ok, guild_pb:decode_sc_guild_apply_list_update(MsgBin)};
decode_msg_bin(2017, MsgBin) -> {ok, guild_pb:decode_sc_guild_log_update(MsgBin)};
decode_msg_bin(2018, MsgBin) -> {ok, guild_pb:decode_sc_guild_log_init(MsgBin)};
decode_msg_bin(2101, MsgBin) -> {ok, ranking_pb:decode_cs_ranking_list_query_request(MsgBin)};
decode_msg_bin(2102, MsgBin) -> {ok, ranking_pb:decode_sc_ranking_list_query_respone(MsgBin)};
decode_msg_bin(2103, MsgBin) -> {ok, ranking_pb:decode_sc_ranking_update_notice(MsgBin)};
decode_msg_bin(2104, MsgBin) -> {ok, ranking_pb:decode_sc_guid_ranking_response(MsgBin)};
decode_msg_bin(2201, MsgBin) -> {ok, vip_level_pb:decode_sc_vip_info(MsgBin)};
decode_msg_bin(2202, MsgBin) -> {ok, vip_level_pb:decode_sc_vip_times(MsgBin)};
decode_msg_bin(2203, MsgBin) -> {ok, vip_level_pb:decode_cs_vip_buy_times(MsgBin)};
decode_msg_bin(2204, MsgBin) -> {ok, vip_level_pb:decode_sc_vip_buy_times(MsgBin)};
decode_msg_bin(2205, MsgBin) -> {ok, vip_level_pb:decode_cs_vip_use_bun(MsgBin)};
decode_msg_bin(2206, MsgBin) -> {ok, vip_level_pb:decode_sc_vip_use_bun_result(MsgBin)};
decode_msg_bin(2207, MsgBin) -> {ok, vip_level_pb:decode_cs_vip_buy_gold(MsgBin)};
decode_msg_bin(2208, MsgBin) -> {ok, vip_level_pb:decode_sc_vip_buy_gold(MsgBin)};
decode_msg_bin(2209, MsgBin) -> {ok, vip_level_pb:decode_sc_vip_recharge(MsgBin)};
decode_msg_bin(2301, MsgBin) -> {ok, common_fight_pb:decode_cs_common_fight_kill_monster(MsgBin)};
decode_msg_bin(2302, MsgBin) -> {ok, common_fight_pb:decode_cs_common_fight_dead(MsgBin)};
decode_msg_bin(2303, MsgBin) -> {ok, common_fight_pb:decode_cs_common_fight_relive(MsgBin)};
decode_msg_bin(2304, MsgBin) -> {ok, common_fight_pb:decode_sc_common_fight_relive_response(MsgBin)};
decode_msg_bin(2305, MsgBin) -> {ok, common_fight_pb:decode_cs_common_fight_quit(MsgBin)};
decode_msg_bin(2306, MsgBin) -> {ok, common_fight_pb:decode_sc_common_fight_quit_reponse(MsgBin)};
decode_msg_bin(2307, MsgBin) -> {ok, common_fight_pb:decode_sc_first_fight_end(MsgBin)};
decode_msg_bin(2401, MsgBin) -> {ok, master_fight_pb:decode_cs_master_fight_enter(MsgBin)};
decode_msg_bin(2402, MsgBin) -> {ok, master_fight_pb:decode_sc_master_fight_enter_response(MsgBin)};
decode_msg_bin(2501, MsgBin) -> {ok, team_pb:decode_cs_team_create(MsgBin)};
decode_msg_bin(2502, MsgBin) -> {ok, team_pb:decode_sc_team_create_reply(MsgBin)};
decode_msg_bin(2503, MsgBin) -> {ok, team_pb:decode_cs_team_quit(MsgBin)};
decode_msg_bin(2504, MsgBin) -> {ok, team_pb:decode_sc_team_quit_reply(MsgBin)};
decode_msg_bin(2505, MsgBin) -> {ok, team_pb:decode_sc_team_member_change(MsgBin)};
decode_msg_bin(2506, MsgBin) -> {ok, team_pb:decode_sc_team_info(MsgBin)};
decode_msg_bin(2507, MsgBin) -> {ok, team_pb:decode_cs_team_invite_agree(MsgBin)};
decode_msg_bin(2508, MsgBin) -> {ok, team_pb:decode_sc_team_invite_agree_reply(MsgBin)};
decode_msg_bin(2509, MsgBin) -> {ok, team_pb:decode_cs_team_invite_list(MsgBin)};
decode_msg_bin(2510, MsgBin) -> {ok, team_pb:decode_sc_team_invite_list_reply(MsgBin)};
decode_msg_bin(2511, MsgBin) -> {ok, team_pb:decode_cs_team_invite(MsgBin)};
decode_msg_bin(2512, MsgBin) -> {ok, team_pb:decode_sc_team_invite_reply(MsgBin)};
decode_msg_bin(2513, MsgBin) -> {ok, team_pb:decode_sc_team_invite_list_change(MsgBin)};
decode_msg_bin(2514, MsgBin) -> {ok, team_pb:decode_cs_team_kick(MsgBin)};
decode_msg_bin(2515, MsgBin) -> {ok, team_pb:decode_sc_team_kick_reply(MsgBin)};
decode_msg_bin(2516, MsgBin) -> {ok, team_pb:decode_sc_team_be_kicked(MsgBin)};
decode_msg_bin(2517, MsgBin) -> {ok, team_pb:decode_cs_team_leader_transfer(MsgBin)};
decode_msg_bin(2518, MsgBin) -> {ok, team_pb:decode_sc_team_leader_transfer_reply(MsgBin)};
decode_msg_bin(2519, MsgBin) -> {ok, team_pb:decode_cs_team_start_activity(MsgBin)};
decode_msg_bin(2520, MsgBin) -> {ok, team_pb:decode_sc_team_start_activity_reply(MsgBin)};
decode_msg_bin(2521, MsgBin) -> {ok, team_pb:decode_sc_team_activity(MsgBin)};
decode_msg_bin(2522, MsgBin) -> {ok, team_pb:decode_cs_team_activity_agree(MsgBin)};
decode_msg_bin(2523, MsgBin) -> {ok, team_pb:decode_sc_team_activity_agree_reply(MsgBin)};
decode_msg_bin(2524, MsgBin) -> {ok, team_pb:decode_sc_team_ready_info(MsgBin)};
decode_msg_bin(2525, MsgBin) -> {ok, team_pb:decode_cs_team_auto_match(MsgBin)};
decode_msg_bin(2526, MsgBin) -> {ok, team_pb:decode_sc_team_auto_match(MsgBin)};
decode_msg_bin(2527, MsgBin) -> {ok, team_pb:decode_cs_personal_auto_match(MsgBin)};
decode_msg_bin(2528, MsgBin) -> {ok, team_pb:decode_sc_personal_auto_match(MsgBin)};
decode_msg_bin(2529, MsgBin) -> {ok, team_pb:decode_sc_personal_auto_match_state(MsgBin)};
decode_msg_bin(2530, MsgBin) -> {ok, team_pb:decode_cs_auto_match_team_list(MsgBin)};
decode_msg_bin(2531, MsgBin) -> {ok, team_pb:decode_sc_auto_match_team_list(MsgBin)};
decode_msg_bin(2532, MsgBin) -> {ok, team_pb:decode_cs_team_apply(MsgBin)};
decode_msg_bin(2533, MsgBin) -> {ok, team_pb:decode_sc_team_apply(MsgBin)};
decode_msg_bin(2534, MsgBin) -> {ok, team_pb:decode_cs_get_team_apply_list(MsgBin)};
decode_msg_bin(2535, MsgBin) -> {ok, team_pb:decode_sc_team_apply_list(MsgBin)};
decode_msg_bin(2536, MsgBin) -> {ok, team_pb:decode_cs_clean_apply_list(MsgBin)};
decode_msg_bin(2537, MsgBin) -> {ok, team_pb:decode_cs_team_apply_agree(MsgBin)};
decode_msg_bin(2601, MsgBin) -> {ok, activity_pb:decode_sc_activity_sign_info(MsgBin)};
decode_msg_bin(2602, MsgBin) -> {ok, activity_pb:decode_cs_activity_sign(MsgBin)};
decode_msg_bin(2603, MsgBin) -> {ok, activity_pb:decode_sc_activity_sign_reply(MsgBin)};
decode_msg_bin(2604, MsgBin) -> {ok, activity_pb:decode_sc_activity_list(MsgBin)};
decode_msg_bin(2605, MsgBin) -> {ok, activity_pb:decode_sc_activity_energy_info(MsgBin)};
decode_msg_bin(2606, MsgBin) -> {ok, activity_pb:decode_cs_activity_energy(MsgBin)};
decode_msg_bin(2607, MsgBin) -> {ok, activity_pb:decode_sc_activity_energy_reply(MsgBin)};
decode_msg_bin(2608, MsgBin) -> {ok, activity_pb:decode_sc_activity_fund_info(MsgBin)};
decode_msg_bin(2609, MsgBin) -> {ok, activity_pb:decode_cs_activity_fund_buy(MsgBin)};
decode_msg_bin(2610, MsgBin) -> {ok, activity_pb:decode_sc_activity_fund_buy_reply(MsgBin)};
decode_msg_bin(2611, MsgBin) -> {ok, activity_pb:decode_cs_activity_fund_award(MsgBin)};
decode_msg_bin(2612, MsgBin) -> {ok, activity_pb:decode_sc_activity_fund_award_reply(MsgBin)};
decode_msg_bin(2613, MsgBin) -> {ok, activity_pb:decode_sc_normal_activity_info(MsgBin)};
decode_msg_bin(2614, MsgBin) -> {ok, activity_pb:decode_cs_normal_activity_award(MsgBin)};
decode_msg_bin(2615, MsgBin) -> {ok, activity_pb:decode_sc_normal_activity_award_reply(MsgBin)};
decode_msg_bin(2616, MsgBin) -> {ok, activity_pb:decode_sc_activity_vip_info(MsgBin)};
decode_msg_bin(2617, MsgBin) -> {ok, activity_pb:decode_cs_activity_vip_buy(MsgBin)};
decode_msg_bin(2618, MsgBin) -> {ok, activity_pb:decode_sc_activity_vip_buy_reply(MsgBin)};
decode_msg_bin(2701, MsgBin) -> {ok, arena_pb:decode_cs_arena_info(MsgBin)};
decode_msg_bin(2702, MsgBin) -> {ok, arena_pb:decode_sc_arena_info_reply(MsgBin)};
decode_msg_bin(2703, MsgBin) -> {ok, arena_pb:decode_cs_arena_button(MsgBin)};
decode_msg_bin(2704, MsgBin) -> {ok, arena_pb:decode_sc_arena_button_reply(MsgBin)};
decode_msg_bin(2705, MsgBin) -> {ok, arena_pb:decode_cs_arena_challenge(MsgBin)};
decode_msg_bin(2706, MsgBin) -> {ok, arena_pb:decode_sc_arena_challenge_reply(MsgBin)};
decode_msg_bin(2707, MsgBin) -> {ok, arena_pb:decode_cs_arena_challenge_account(MsgBin)};
decode_msg_bin(2708, MsgBin) -> {ok, arena_pb:decode_cs_arena_record(MsgBin)};
decode_msg_bin(2709, MsgBin) -> {ok, arena_pb:decode_sc_arena_record_reply(MsgBin)};
decode_msg_bin(2710, MsgBin) -> {ok, arena_pb:decode_cs_arena_times(MsgBin)};
decode_msg_bin(2711, MsgBin) -> {ok, arena_pb:decode_sc_arena_times_reply(MsgBin)};
decode_msg_bin(_, _) -> error.
split_bin(<<1:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1, 0, 0, MsgBin};
split_bin(<<2:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2, 0, 0, MsgBin};
split_bin(<<3:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 3, 0, 0, MsgBin};
split_bin(<<4:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 4, 0, 0, MsgBin};
split_bin(<<5:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 5, 0, 0, MsgBin};
split_bin(<<6:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 6, 0, 0, MsgBin};
split_bin(<<7:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 7, 0, 0, MsgBin};
split_bin(<<8:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 8, 0, 0, MsgBin};
split_bin(<<9:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 9, 0, 0, MsgBin};
split_bin(<<10:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 10, 0, 0, MsgBin};
split_bin(<<11:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 11, 0, 0, MsgBin};
split_bin(<<12:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 12, 0, 0, MsgBin};
split_bin(<<13:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 13, 0, 0, MsgBin};
split_bin(<<14:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 14, 1, 0, MsgBin};
split_bin(<<15:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 15, 1, 0, MsgBin};
split_bin(<<16:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 16, 1, 0, MsgBin};
split_bin(<<17:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 17, 0, 0, MsgBin};
split_bin(<<101:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 101, 0, 0, MsgBin};
split_bin(<<102:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 102, 0, 0, MsgBin};
split_bin(<<103:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 103, 1, 0, MsgBin};
split_bin(<<104:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 104, 0, 0, MsgBin};
split_bin(<<105:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 105, 0, 0, MsgBin};
split_bin(<<106:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 106, 0, 0, MsgBin};
split_bin(<<107:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 107, 0, 0, MsgBin};
split_bin(<<108:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 108, 0, 0, MsgBin};
split_bin(<<109:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 109, 0, 0, MsgBin};
split_bin(<<110:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 110, 0, 0, MsgBin};
split_bin(<<111:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 111, 0, 0, MsgBin};
split_bin(<<112:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 112, 0, 0, MsgBin};
split_bin(<<113:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 113, 0, 0, MsgBin};
split_bin(<<114:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 114, 0, 0, MsgBin};
split_bin(<<115:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 115, 1, 0, MsgBin};
split_bin(<<116:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 116, 0, 0, MsgBin};
split_bin(<<117:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 117, 0, 0, MsgBin};
split_bin(<<118:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 118, 0, 0, MsgBin};
split_bin(<<119:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 119, 0, 0, MsgBin};
split_bin(<<120:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 120, 0, 0, MsgBin};
split_bin(<<121:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 121, 0, 0, MsgBin};
split_bin(<<150:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 150, 0, 0, MsgBin};
split_bin(<<151:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 151, 0, 0, MsgBin};
split_bin(<<152:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 152, 0, 0, MsgBin};
split_bin(<<160:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 160, 0, 0, MsgBin};
split_bin(<<161:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 161, 0, 0, MsgBin};
split_bin(<<162:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 162, 0, 0, MsgBin};
split_bin(<<200:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 200, 1, 1, MsgBin};
split_bin(<<201:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 201, 1, 1, MsgBin};
split_bin(<<202:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 202, 1, 0, MsgBin};
split_bin(<<203:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 203, 1, 0, MsgBin};
split_bin(<<205:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 205, 1, 1, MsgBin};
split_bin(<<206:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 206, 1, 1, MsgBin};
split_bin(<<207:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 207, 1, 0, MsgBin};
split_bin(<<208:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 208, 1, 1, MsgBin};
split_bin(<<209:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 209, 1, 1, MsgBin};
split_bin(<<301:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 301, 1, 1, MsgBin};
split_bin(<<302:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 302, 1, 0, MsgBin};
split_bin(<<303:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 303, 1, 1, MsgBin};
split_bin(<<304:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 304, 1, 0, MsgBin};
split_bin(<<305:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 305, 1, 0, MsgBin};
split_bin(<<306:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 306, 1, 0, MsgBin};
split_bin(<<307:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 307, 0, 0, MsgBin};
split_bin(<<308:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 308, 0, 0, MsgBin};
split_bin(<<309:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 309, 0, 1, MsgBin};
split_bin(<<310:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 310, 0, 0, MsgBin};
split_bin(<<501:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 501, 0, 0, MsgBin};
split_bin(<<502:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 502, 0, 0, MsgBin};
split_bin(<<503:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 503, 0, 0, MsgBin};
split_bin(<<504:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 504, 0, 0, MsgBin};
split_bin(<<505:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 505, 1, 0, MsgBin};
split_bin(<<506:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 506, 0, 0, MsgBin};
split_bin(<<507:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 507, 1, 0, MsgBin};
split_bin(<<508:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 508, 0, 0, MsgBin};
split_bin(<<509:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 509, 1, 0, MsgBin};
split_bin(<<510:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 510, 0, 0, MsgBin};
split_bin(<<511:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 511, 1, 0, MsgBin};
split_bin(<<512:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 512, 0, 0, MsgBin};
split_bin(<<513:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 513, 1, 0, MsgBin};
split_bin(<<514:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 514, 0, 0, MsgBin};
split_bin(<<515:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 515, 1, 0, MsgBin};
split_bin(<<516:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 516, 0, 0, MsgBin};
split_bin(<<517:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 517, 1, 0, MsgBin};
split_bin(<<518:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 518, 0, 0, MsgBin};
split_bin(<<519:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 519, 1, 0, MsgBin};
split_bin(<<520:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 520, 0, 0, MsgBin};
split_bin(<<521:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 521, 1, 0, MsgBin};
split_bin(<<522:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 522, 0, 0, MsgBin};
split_bin(<<523:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 523, 1, 0, MsgBin};
split_bin(<<524:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 524, 0, 0, MsgBin};
split_bin(<<525:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 525, 1, 0, MsgBin};
split_bin(<<526:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 526, 0, 0, MsgBin};
split_bin(<<527:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 527, 1, 0, MsgBin};
split_bin(<<528:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 528, 0, 0, MsgBin};
split_bin(<<530:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 530, 0, 0, MsgBin};
split_bin(<<531:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 531, 1, 0, MsgBin};
split_bin(<<532:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 532, 0, 0, MsgBin};
split_bin(<<601:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 601, 1, 0, MsgBin};
split_bin(<<602:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 602, 0, 0, MsgBin};
split_bin(<<603:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 603, 0, 0, MsgBin};
split_bin(<<701:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 701, 0, 0, MsgBin};
split_bin(<<702:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 702, 0, 0, MsgBin};
split_bin(<<704:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 704, 0, 0, MsgBin};
split_bin(<<705:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 705, 0, 0, MsgBin};
split_bin(<<801:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 801, 0, 0, MsgBin};
split_bin(<<802:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 802, 1, 0, MsgBin};
split_bin(<<803:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 803, 0, 0, MsgBin};
split_bin(<<804:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 804, 1, 0, MsgBin};
split_bin(<<805:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 805, 0, 0, MsgBin};
split_bin(<<806:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 806, 0, 0, MsgBin};
split_bin(<<807:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 807, 0, 0, MsgBin};
split_bin(<<808:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 808, 0, 0, MsgBin};
split_bin(<<901:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 901, 0, 0, MsgBin};
split_bin(<<902:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 902, 0, 0, MsgBin};
split_bin(<<903:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 903, 0, 0, MsgBin};
split_bin(<<904:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 904, 1, 0, MsgBin};
split_bin(<<905:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 905, 0, 0, MsgBin};
split_bin(<<906:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 906, 1, 0, MsgBin};
split_bin(<<907:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 907, 0, 0, MsgBin};
split_bin(<<908:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 908, 0, 0, MsgBin};
split_bin(<<909:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 909, 0, 0, MsgBin};
split_bin(<<910:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 910, 1, 0, MsgBin};
split_bin(<<911:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 911, 1, 0, MsgBin};
split_bin(<<912:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 912, 0, 0, MsgBin};
split_bin(<<913:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 913, 0, 0, MsgBin};
split_bin(<<914:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 914, 0, 0, MsgBin};
split_bin(<<915:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 915, 0, 0, MsgBin};
split_bin(<<916:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 916, 0, 0, MsgBin};
split_bin(<<917:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 917, 0, 0, MsgBin};
split_bin(<<1001:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1001, 0, 0, MsgBin};
split_bin(<<1002:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1002, 0, 0, MsgBin};
split_bin(<<1003:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1003, 0, 0, MsgBin};
split_bin(<<1004:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1004, 0, 0, MsgBin};
split_bin(<<1005:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1005, 0, 0, MsgBin};
split_bin(<<1006:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1006, 0, 0, MsgBin};
split_bin(<<1007:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1007, 0, 0, MsgBin};
split_bin(<<1101:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1101, 1, 0, MsgBin};
split_bin(<<1102:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1102, 0, 0, MsgBin};
split_bin(<<1103:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1103, 1, 0, MsgBin};
split_bin(<<1104:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1104, 0, 0, MsgBin};
split_bin(<<1105:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1105, 1, 0, MsgBin};
split_bin(<<1106:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1106, 0, 0, MsgBin};
split_bin(<<1107:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1107, 1, 0, MsgBin};
split_bin(<<1108:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1108, 0, 0, MsgBin};
split_bin(<<1109:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1109, 1, 0, MsgBin};
split_bin(<<1110:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1110, 0, 0, MsgBin};
split_bin(<<1111:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1111, 0, 0, MsgBin};
split_bin(<<1112:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1112, 1, 0, MsgBin};
split_bin(<<1113:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1113, 0, 0, MsgBin};
split_bin(<<1201:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1201, 1, 0, MsgBin};
split_bin(<<1202:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1202, 0, 0, MsgBin};
split_bin(<<1206:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1206, 1, 0, MsgBin};
split_bin(<<1207:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1207, 0, 0, MsgBin};
split_bin(<<1301:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1301, 0, 0, MsgBin};
split_bin(<<1302:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1302, 0, 0, MsgBin};
split_bin(<<1303:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1303, 1, 0, MsgBin};
split_bin(<<1304:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1304, 0, 0, MsgBin};
split_bin(<<1305:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1305, 1, 0, MsgBin};
split_bin(<<1306:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1306, 0, 0, MsgBin};
split_bin(<<1307:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1307, 0, 0, MsgBin};
split_bin(<<1308:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1308, 0, 0, MsgBin};
split_bin(<<1401:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1401, 0, 0, MsgBin};
split_bin(<<1402:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1402, 0, 0, MsgBin};
split_bin(<<1403:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1403, 1, 0, MsgBin};
split_bin(<<1404:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1404, 0, 0, MsgBin};
split_bin(<<1501:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1501, 0, 0, MsgBin};
split_bin(<<1502:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1502, 0, 0, MsgBin};
split_bin(<<1503:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1503, 0, 0, MsgBin};
split_bin(<<1504:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1504, 1, 0, MsgBin};
split_bin(<<1505:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1505, 0, 0, MsgBin};
split_bin(<<1601:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1601, 0, 0, MsgBin};
split_bin(<<1602:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1602, 0, 0, MsgBin};
split_bin(<<1603:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1603, 1, 0, MsgBin};
split_bin(<<1604:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1604, 0, 0, MsgBin};
split_bin(<<1605:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1605, 0, 0, MsgBin};
split_bin(<<1606:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1606, 0, 0, MsgBin};
split_bin(<<1700:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1700, 0, 0, MsgBin};
split_bin(<<1701:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1701, 0, 0, MsgBin};
split_bin(<<1702:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1702, 0, 0, MsgBin};
split_bin(<<1703:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1703, 0, 0, MsgBin};
split_bin(<<1802:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1802, 0, 0, MsgBin};
split_bin(<<1803:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1803, 0, 0, MsgBin};
split_bin(<<1804:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1804, 0, 0, MsgBin};
split_bin(<<1805:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1805, 0, 0, MsgBin};
split_bin(<<1806:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1806, 0, 0, MsgBin};
split_bin(<<1807:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1807, 0, 0, MsgBin};
split_bin(<<1809:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1809, 0, 0, MsgBin};
split_bin(<<1810:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1810, 0, 0, MsgBin};
split_bin(<<1901:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1901, 0, 0, MsgBin};
split_bin(<<1903:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1903, 0, 0, MsgBin};
split_bin(<<1904:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1904, 0, 0, MsgBin};
split_bin(<<1905:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1905, 0, 0, MsgBin};
split_bin(<<1906:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 1906, 0, 0, MsgBin};
split_bin(<<2000:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2000, 0, 0, MsgBin};
split_bin(<<2001:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2001, 0, 0, MsgBin};
split_bin(<<2002:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2002, 0, 0, MsgBin};
split_bin(<<2003:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2003, 0, 0, MsgBin};
split_bin(<<2004:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2004, 0, 0, MsgBin};
split_bin(<<2005:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2005, 0, 0, MsgBin};
split_bin(<<2006:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2006, 1, 0, MsgBin};
split_bin(<<2007:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2007, 0, 0, MsgBin};
split_bin(<<2008:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2008, 1, 0, MsgBin};
split_bin(<<2009:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2009, 1, 0, MsgBin};
split_bin(<<2010:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2010, 0, 0, MsgBin};
split_bin(<<2011:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2011, 0, 0, MsgBin};
split_bin(<<2012:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2012, 0, 0, MsgBin};
split_bin(<<2013:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2013, 0, 0, MsgBin};
split_bin(<<2014:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2014, 0, 0, MsgBin};
split_bin(<<2015:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2015, 0, 0, MsgBin};
split_bin(<<2016:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2016, 0, 0, MsgBin};
split_bin(<<2017:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2017, 0, 0, MsgBin};
split_bin(<<2018:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2018, 0, 0, MsgBin};
split_bin(<<2101:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2101, 1, 0, MsgBin};
split_bin(<<2102:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2102, 0, 0, MsgBin};
split_bin(<<2103:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2103, 0, 0, MsgBin};
split_bin(<<2104:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2104, 0, 0, MsgBin};
split_bin(<<2201:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2201, 0, 0, MsgBin};
split_bin(<<2202:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2202, 0, 0, MsgBin};
split_bin(<<2203:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2203, 0, 0, MsgBin};
split_bin(<<2204:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2204, 0, 0, MsgBin};
split_bin(<<2205:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2205, 0, 0, MsgBin};
split_bin(<<2206:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2206, 0, 0, MsgBin};
split_bin(<<2207:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2207, 0, 0, MsgBin};
split_bin(<<2208:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2208, 0, 0, MsgBin};
split_bin(<<2209:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2209, 0, 0, MsgBin};
split_bin(<<2301:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2301, 0, 0, MsgBin};
split_bin(<<2302:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2302, 0, 0, MsgBin};
split_bin(<<2303:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2303, 0, 0, MsgBin};
split_bin(<<2304:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2304, 0, 0, MsgBin};
split_bin(<<2305:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2305, 0, 0, MsgBin};
split_bin(<<2306:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2306, 0, 0, MsgBin};
split_bin(<<2307:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2307, 0, 0, MsgBin};
split_bin(<<2401:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2401, 0, 0, MsgBin};
split_bin(<<2402:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2402, 0, 0, MsgBin};
split_bin(<<2501:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2501, 1, 0, MsgBin};
split_bin(<<2502:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2502, 0, 0, MsgBin};
split_bin(<<2503:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2503, 0, 0, MsgBin};
split_bin(<<2504:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2504, 0, 0, MsgBin};
split_bin(<<2505:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2505, 0, 0, MsgBin};
split_bin(<<2506:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2506, 0, 0, MsgBin};
split_bin(<<2507:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2507, 0, 0, MsgBin};
split_bin(<<2508:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2508, 0, 0, MsgBin};
split_bin(<<2509:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2509, 0, 0, MsgBin};
split_bin(<<2510:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2510, 0, 0, MsgBin};
split_bin(<<2511:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2511, 0, 0, MsgBin};
split_bin(<<2512:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2512, 0, 0, MsgBin};
split_bin(<<2513:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2513, 0, 0, MsgBin};
split_bin(<<2514:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2514, 0, 0, MsgBin};
split_bin(<<2515:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2515, 0, 0, MsgBin};
split_bin(<<2516:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2516, 0, 0, MsgBin};
split_bin(<<2517:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2517, 0, 0, MsgBin};
split_bin(<<2518:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2518, 0, 0, MsgBin};
split_bin(<<2519:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2519, 0, 0, MsgBin};
split_bin(<<2520:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2520, 0, 0, MsgBin};
split_bin(<<2521:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2521, 0, 0, MsgBin};
split_bin(<<2522:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2522, 0, 0, MsgBin};
split_bin(<<2523:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2523, 0, 0, MsgBin};
split_bin(<<2524:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2524, 0, 0, MsgBin};
split_bin(<<2525:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2525, 0, 0, MsgBin};
split_bin(<<2526:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2526, 0, 0, MsgBin};
split_bin(<<2527:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2527, 0, 0, MsgBin};
split_bin(<<2528:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2528, 0, 0, MsgBin};
split_bin(<<2529:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2529, 0, 0, MsgBin};
split_bin(<<2530:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2530, 0, 0, MsgBin};
split_bin(<<2531:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2531, 0, 0, MsgBin};
split_bin(<<2532:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2532, 0, 0, MsgBin};
split_bin(<<2533:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2533, 0, 0, MsgBin};
split_bin(<<2534:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2534, 0, 0, MsgBin};
split_bin(<<2535:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2535, 0, 0, MsgBin};
split_bin(<<2536:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2536, 0, 0, MsgBin};
split_bin(<<2537:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2537, 0, 0, MsgBin};
split_bin(<<2601:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2601, 0, 0, MsgBin};
split_bin(<<2602:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2602, 0, 0, MsgBin};
split_bin(<<2603:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2603, 0, 0, MsgBin};
split_bin(<<2604:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2604, 0, 0, MsgBin};
split_bin(<<2605:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2605, 0, 0, MsgBin};
split_bin(<<2606:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2606, 0, 0, MsgBin};
split_bin(<<2607:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2607, 0, 0, MsgBin};
split_bin(<<2608:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2608, 0, 0, MsgBin};
split_bin(<<2609:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2609, 1, 0, MsgBin};
split_bin(<<2610:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2610, 1, 0, MsgBin};
split_bin(<<2611:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2611, 0, 0, MsgBin};
split_bin(<<2612:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2612, 0, 0, MsgBin};
split_bin(<<2613:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2613, 0, 0, MsgBin};
split_bin(<<2614:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2614, 0, 0, MsgBin};
split_bin(<<2615:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2615, 0, 0, MsgBin};
split_bin(<<2616:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2616, 0, 0, MsgBin};
split_bin(<<2617:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2617, 0, 0, MsgBin};
split_bin(<<2618:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2618, 0, 0, MsgBin};
split_bin(<<2701:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2701, 0, 0, MsgBin};
split_bin(<<2702:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2702, 0, 0, MsgBin};
split_bin(<<2703:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2703, 0, 0, MsgBin};
split_bin(<<2704:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2704, 0, 0, MsgBin};
split_bin(<<2705:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2705, 1, 0, MsgBin};
split_bin(<<2706:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2706, 0, 0, MsgBin};
split_bin(<<2707:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2707, 1, 0, MsgBin};
split_bin(<<2708:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2708, 0, 0, MsgBin};
split_bin(<<2709:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2709, 0, 0, MsgBin};
split_bin(<<2710:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2710, 0, 0, MsgBin};
split_bin(<<2711:?INT_PROTO_ID, MsgBin/binary>>) -> {ok, 2711, 0, 0, MsgBin};
split_bin(_) -> error.
